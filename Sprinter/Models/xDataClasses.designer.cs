#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sprinter.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Sprinter")]
	public partial class DB : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPageType(PageType instance);
    partial void UpdatePageType(PageType instance);
    partial void DeletePageType(PageType instance);
    partial void InsertBookPublisher(BookPublisher instance);
    partial void UpdateBookPublisher(BookPublisher instance);
    partial void DeleteBookPublisher(BookPublisher instance);
    partial void InsertBookPageRel(BookPageRel instance);
    partial void UpdateBookPageRel(BookPageRel instance);
    partial void DeleteBookPageRel(BookPageRel instance);
    partial void InsertBookDescriptionProvider(BookDescriptionProvider instance);
    partial void UpdateBookDescriptionProvider(BookDescriptionProvider instance);
    partial void DeleteBookDescriptionProvider(BookDescriptionProvider instance);
    partial void InsertBookCover(BookCover instance);
    partial void UpdateBookCover(BookCover instance);
    partial void DeleteBookCover(BookCover instance);
    partial void InsertBookAuthorsRel(BookAuthorsRel instance);
    partial void UpdateBookAuthorsRel(BookAuthorsRel instance);
    partial void DeleteBookAuthorsRel(BookAuthorsRel instance);
    partial void InsertAuthor(Author instance);
    partial void UpdateAuthor(Author instance);
    partial void DeleteAuthor(Author instance);
    partial void InsertBookTag(BookTag instance);
    partial void UpdateBookTag(BookTag instance);
    partial void DeleteBookTag(BookTag instance);
    partial void InsertBookTagRel(BookTagRel instance);
    partial void UpdateBookTagRel(BookTagRel instance);
    partial void DeleteBookTagRel(BookTagRel instance);
    partial void InsertTagComplexFilterItem(TagComplexFilterItem instance);
    partial void UpdateTagComplexFilterItem(TagComplexFilterItem instance);
    partial void DeleteTagComplexFilterItem(TagComplexFilterItem instance);
    partial void InsertTagComplexFilterList(TagComplexFilterList instance);
    partial void UpdateTagComplexFilterList(TagComplexFilterList instance);
    partial void DeleteTagComplexFilterList(TagComplexFilterList instance);
    partial void InsertTagComplexFilter(TagComplexFilter instance);
    partial void UpdateTagComplexFilter(TagComplexFilter instance);
    partial void DeleteTagComplexFilter(TagComplexFilter instance);
    partial void InsertTagSimpleFilterItem(TagSimpleFilterItem instance);
    partial void UpdateTagSimpleFilterItem(TagSimpleFilterItem instance);
    partial void DeleteTagSimpleFilterItem(TagSimpleFilterItem instance);
    partial void InsertTagSimpleFilter(TagSimpleFilter instance);
    partial void UpdateTagSimpleFilter(TagSimpleFilter instance);
    partial void DeleteTagSimpleFilter(TagSimpleFilter instance);
    partial void InsertPageTextData(PageTextData instance);
    partial void UpdatePageTextData(PageTextData instance);
    partial void DeletePageTextData(PageTextData instance);
    partial void InsertBooksOnMain(BooksOnMain instance);
    partial void UpdateBooksOnMain(BooksOnMain instance);
    partial void DeleteBooksOnMain(BooksOnMain instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUsersInRole(UsersInRole instance);
    partial void UpdateUsersInRole(UsersInRole instance);
    partial void DeleteUsersInRole(UsersInRole instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertMembershipData(MembershipData instance);
    partial void UpdateMembershipData(MembershipData instance);
    partial void DeleteMembershipData(MembershipData instance);
    partial void InsertOrderStatus(OrderStatus instance);
    partial void UpdateOrderStatus(OrderStatus instance);
    partial void DeleteOrderStatus(OrderStatus instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertOrderedBook(OrderedBook instance);
    partial void UpdateOrderedBook(OrderedBook instance);
    partial void DeleteOrderedBook(OrderedBook instance);
    partial void InsertPartner(Partner instance);
    partial void UpdatePartner(Partner instance);
    partial void DeletePartner(Partner instance);
    partial void InsertShopCart(ShopCart instance);
    partial void UpdateShopCart(ShopCart instance);
    partial void DeleteShopCart(ShopCart instance);
    partial void InsertShopCartField(ShopCartField instance);
    partial void UpdateShopCartField(ShopCartField instance);
    partial void DeleteShopCartField(ShopCartField instance);
    partial void InsertOrderDeliveryGroup(OrderDeliveryGroup instance);
    partial void UpdateOrderDeliveryGroup(OrderDeliveryGroup instance);
    partial void DeleteOrderDeliveryGroup(OrderDeliveryGroup instance);
    partial void InsertOrderDetail(OrderDetail instance);
    partial void UpdateOrderDetail(OrderDetail instance);
    partial void DeleteOrderDetail(OrderDetail instance);
    partial void InsertBookPrice(BookPrice instance);
    partial void UpdateBookPrice(BookPrice instance);
    partial void DeleteBookPrice(BookPrice instance);
    partial void InsertPartnerPriority(PartnerPriority instance);
    partial void UpdatePartnerPriority(PartnerPriority instance);
    partial void DeletePartnerPriority(PartnerPriority instance);
    partial void InsertOrderDeliveryRegion(OrderDeliveryRegion instance);
    partial void UpdateOrderDeliveryRegion(OrderDeliveryRegion instance);
    partial void DeleteOrderDeliveryRegion(OrderDeliveryRegion instance);
    partial void InsertOrderDeliveryZone(OrderDeliveryZone instance);
    partial void UpdateOrderDeliveryZone(OrderDeliveryZone instance);
    partial void DeleteOrderDeliveryZone(OrderDeliveryZone instance);
    partial void InsertOrderDeliveryZoneInterval(OrderDeliveryZoneInterval instance);
    partial void UpdateOrderDeliveryZoneInterval(OrderDeliveryZoneInterval instance);
    partial void DeleteOrderDeliveryZoneInterval(OrderDeliveryZoneInterval instance);
    partial void InsertBookSaleCatalog(BookSaleCatalog instance);
    partial void UpdateBookSaleCatalog(BookSaleCatalog instance);
    partial void DeleteBookSaleCatalog(BookSaleCatalog instance);
    partial void InsertBookPublisherMargin(BookPublisherMargin instance);
    partial void UpdateBookPublisherMargin(BookPublisherMargin instance);
    partial void DeleteBookPublisherMargin(BookPublisherMargin instance);
    partial void InsertPartnerImportSetting(PartnerImportSetting instance);
    partial void UpdatePartnerImportSetting(PartnerImportSetting instance);
    partial void DeletePartnerImportSetting(PartnerImportSetting instance);
    partial void InsertBookDescriptionCatalog(BookDescriptionCatalog instance);
    partial void UpdateBookDescriptionCatalog(BookDescriptionCatalog instance);
    partial void DeleteBookDescriptionCatalog(BookDescriptionCatalog instance);
    partial void InsertSiteSetting(SiteSetting instance);
    partial void UpdateSiteSetting(SiteSetting instance);
    partial void DeleteSiteSetting(SiteSetting instance);
    partial void InsertOrderPaymentProvider(OrderPaymentProvider instance);
    partial void UpdateOrderPaymentProvider(OrderPaymentProvider instance);
    partial void DeleteOrderPaymentProvider(OrderPaymentProvider instance);
    partial void InsertOrderPaymentDeliveryRel(OrderPaymentDeliveryRel instance);
    partial void UpdateOrderPaymentDeliveryRel(OrderPaymentDeliveryRel instance);
    partial void DeleteOrderPaymentDeliveryRel(OrderPaymentDeliveryRel instance);
    partial void InsertCMSPage(CMSPage instance);
    partial void UpdateCMSPage(CMSPage instance);
    partial void DeleteCMSPage(CMSPage instance);
    partial void InsertBookDescriptionDataKey(BookDescriptionDataKey instance);
    partial void UpdateBookDescriptionDataKey(BookDescriptionDataKey instance);
    partial void DeleteBookDescriptionDataKey(BookDescriptionDataKey instance);
    partial void InsertBookDescriptionDataValue(BookDescriptionDataValue instance);
    partial void UpdateBookDescriptionDataValue(BookDescriptionDataValue instance);
    partial void DeleteBookDescriptionDataValue(BookDescriptionDataValue instance);
    partial void InsertBookComment(BookComment instance);
    partial void UpdateBookComment(BookComment instance);
    partial void DeleteBookComment(BookComment instance);
    partial void InsertMailingReplacement(MailingReplacement instance);
    partial void UpdateMailingReplacement(MailingReplacement instance);
    partial void DeleteMailingReplacement(MailingReplacement instance);
    partial void InsertMailingList(MailingList instance);
    partial void UpdateMailingList(MailingList instance);
    partial void DeleteMailingList(MailingList instance);
    partial void InsertOrderDeliveryProvider(OrderDeliveryProvider instance);
    partial void UpdateOrderDeliveryProvider(OrderDeliveryProvider instance);
    partial void DeleteOrderDeliveryProvider(OrderDeliveryProvider instance);
    partial void InsertBookSpecOffer(BookSpecOffer instance);
    partial void UpdateBookSpecOffer(BookSpecOffer instance);
    partial void DeleteBookSpecOffer(BookSpecOffer instance);
    partial void InsertShopCartItem(ShopCartItem instance);
    partial void UpdateShopCartItem(ShopCartItem instance);
    partial void DeleteShopCartItem(ShopCartItem instance);
    partial void InsertUserProfile(UserProfile instance);
    partial void UpdateUserProfile(UserProfile instance);
    partial void DeleteUserProfile(UserProfile instance);
    partial void InsertOrderComment(OrderComment instance);
    partial void UpdateOrderComment(OrderComment instance);
    partial void DeleteOrderComment(OrderComment instance);
    #endregion
		
		public DB() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SprinterConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DB(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PageType> PageTypes
		{
			get
			{
				return this.GetTable<PageType>();
			}
		}
		
		public System.Data.Linq.Table<BookPublisher> BookPublishers
		{
			get
			{
				return this.GetTable<BookPublisher>();
			}
		}
		
		public System.Data.Linq.Table<BookPageRel> BookPageRels
		{
			get
			{
				return this.GetTable<BookPageRel>();
			}
		}
		
		public System.Data.Linq.Table<BookDescriptionProvider> BookDescriptionProviders
		{
			get
			{
				return this.GetTable<BookDescriptionProvider>();
			}
		}
		
		public System.Data.Linq.Table<BookCover> BookCovers
		{
			get
			{
				return this.GetTable<BookCover>();
			}
		}
		
		public System.Data.Linq.Table<BookAuthorsRel> BookAuthorsRels
		{
			get
			{
				return this.GetTable<BookAuthorsRel>();
			}
		}
		
		public System.Data.Linq.Table<Author> Authors
		{
			get
			{
				return this.GetTable<Author>();
			}
		}
		
		public System.Data.Linq.Table<BookTag> BookTags
		{
			get
			{
				return this.GetTable<BookTag>();
			}
		}
		
		public System.Data.Linq.Table<BookTagRel> BookTagRels
		{
			get
			{
				return this.GetTable<BookTagRel>();
			}
		}
		
		public System.Data.Linq.Table<TagComplexFilterItem> TagComplexFilterItems
		{
			get
			{
				return this.GetTable<TagComplexFilterItem>();
			}
		}
		
		public System.Data.Linq.Table<TagComplexFilterList> TagComplexFilterLists
		{
			get
			{
				return this.GetTable<TagComplexFilterList>();
			}
		}
		
		public System.Data.Linq.Table<TagComplexFilter> TagComplexFilters
		{
			get
			{
				return this.GetTable<TagComplexFilter>();
			}
		}
		
		public System.Data.Linq.Table<TagSimpleFilterItem> TagSimpleFilterItems
		{
			get
			{
				return this.GetTable<TagSimpleFilterItem>();
			}
		}
		
		public System.Data.Linq.Table<TagSimpleFilter> TagSimpleFilters
		{
			get
			{
				return this.GetTable<TagSimpleFilter>();
			}
		}
		
		public System.Data.Linq.Table<PageTextData> PageTextDatas
		{
			get
			{
				return this.GetTable<PageTextData>();
			}
		}
		
		public System.Data.Linq.Table<BooksOnMain> BooksOnMains
		{
			get
			{
				return this.GetTable<BooksOnMain>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UsersInRole> UsersInRoles
		{
			get
			{
				return this.GetTable<UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<MembershipData> MembershipDatas
		{
			get
			{
				return this.GetTable<MembershipData>();
			}
		}
		
		public System.Data.Linq.Table<OrderStatus> OrderStatus
		{
			get
			{
				return this.GetTable<OrderStatus>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<OrderedBook> OrderedBooks
		{
			get
			{
				return this.GetTable<OrderedBook>();
			}
		}
		
		public System.Data.Linq.Table<Partner> Partners
		{
			get
			{
				return this.GetTable<Partner>();
			}
		}
		
		public System.Data.Linq.Table<ShopCart> ShopCarts
		{
			get
			{
				return this.GetTable<ShopCart>();
			}
		}
		
		public System.Data.Linq.Table<ShopCartField> ShopCartFields
		{
			get
			{
				return this.GetTable<ShopCartField>();
			}
		}
		
		public System.Data.Linq.Table<OrderDeliveryGroup> OrderDeliveryGroups
		{
			get
			{
				return this.GetTable<OrderDeliveryGroup>();
			}
		}
		
		public System.Data.Linq.Table<OrderDetail> OrderDetails
		{
			get
			{
				return this.GetTable<OrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<BookPrice> BookPrices
		{
			get
			{
				return this.GetTable<BookPrice>();
			}
		}
		
		public System.Data.Linq.Table<PartnerPriority> PartnerPriorities
		{
			get
			{
				return this.GetTable<PartnerPriority>();
			}
		}
		
		public System.Data.Linq.Table<OrderDeliveryRegion> OrderDeliveryRegions
		{
			get
			{
				return this.GetTable<OrderDeliveryRegion>();
			}
		}
		
		public System.Data.Linq.Table<OrderDeliveryZone> OrderDeliveryZones
		{
			get
			{
				return this.GetTable<OrderDeliveryZone>();
			}
		}
		
		public System.Data.Linq.Table<OrderDeliveryZoneInterval> OrderDeliveryZoneIntervals
		{
			get
			{
				return this.GetTable<OrderDeliveryZoneInterval>();
			}
		}
		
		public System.Data.Linq.Table<BookSaleCatalog> BookSaleCatalogs
		{
			get
			{
				return this.GetTable<BookSaleCatalog>();
			}
		}
		
		public System.Data.Linq.Table<BookPublisherMargin> BookPublisherMargins
		{
			get
			{
				return this.GetTable<BookPublisherMargin>();
			}
		}
		
		public System.Data.Linq.Table<PartnerImportSetting> PartnerImportSettings
		{
			get
			{
				return this.GetTable<PartnerImportSetting>();
			}
		}
		
		public System.Data.Linq.Table<BookAvailableCounters> BookAvailableCounters
		{
			get
			{
				return this.GetTable<BookAvailableCounters>();
			}
		}
		
		public System.Data.Linq.Table<BookCommonCounters> BookCommonCounters
		{
			get
			{
				return this.GetTable<BookCommonCounters>();
			}
		}
		
		public System.Data.Linq.Table<BookDescriptionCatalog> BookDescriptionCatalogs
		{
			get
			{
				return this.GetTable<BookDescriptionCatalog>();
			}
		}
		
		public System.Data.Linq.Table<SiteSetting> SiteSettings
		{
			get
			{
				return this.GetTable<SiteSetting>();
			}
		}
		
		public System.Data.Linq.Table<OrderPaymentProvider> OrderPaymentProviders
		{
			get
			{
				return this.GetTable<OrderPaymentProvider>();
			}
		}
		
		public System.Data.Linq.Table<OrderPaymentDeliveryRel> OrderPaymentDeliveryRels
		{
			get
			{
				return this.GetTable<OrderPaymentDeliveryRel>();
			}
		}
		
		public System.Data.Linq.Table<CMSPage> CMSPages
		{
			get
			{
				return this.GetTable<CMSPage>();
			}
		}
		
		public System.Data.Linq.Table<BookDescriptionDataKey> BookDescriptionDataKeys
		{
			get
			{
				return this.GetTable<BookDescriptionDataKey>();
			}
		}
		
		public System.Data.Linq.Table<BookDescriptionDataValue> BookDescriptionDataValues
		{
			get
			{
				return this.GetTable<BookDescriptionDataValue>();
			}
		}
		
		public System.Data.Linq.Table<BookComment> BookComments
		{
			get
			{
				return this.GetTable<BookComment>();
			}
		}
		
		public System.Data.Linq.Table<MailingReplacement> MailingReplacements
		{
			get
			{
				return this.GetTable<MailingReplacement>();
			}
		}
		
		public System.Data.Linq.Table<MailingList> MailingLists
		{
			get
			{
				return this.GetTable<MailingList>();
			}
		}
		
		public System.Data.Linq.Table<OrderDeliveryProvider> OrderDeliveryProviders
		{
			get
			{
				return this.GetTable<OrderDeliveryProvider>();
			}
		}
		
		public System.Data.Linq.Table<BookSpecOffer> BookSpecOffers
		{
			get
			{
				return this.GetTable<BookSpecOffer>();
			}
		}
		
		public System.Data.Linq.Table<ShopCartItem> ShopCartItems
		{
			get
			{
				return this.GetTable<ShopCartItem>();
			}
		}
		
		public System.Data.Linq.Table<UserProfile> UserProfiles
		{
			get
			{
				return this.GetTable<UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<OrderComment> OrderComments
		{
			get
			{
				return this.GetTable<OrderComment>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getSimilarBooks", IsComposable=true)]
		public IQueryable<getSimilarBooksResult> getSimilarBooks([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BookID", DbType="Int")] System.Nullable<int> bookID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BookCount", DbType="Int")] System.Nullable<int> bookCount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsAvail", DbType="Int")] System.Nullable<int> isAvail)
		{
			return this.CreateMethodCallQuery<getSimilarBooksResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bookID, bookCount, isAvail);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getSectionList", IsComposable=true)]
		public IQueryable<getSectionListResult> getSectionList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AvailOnly", DbType="Int")] System.Nullable<int> availOnly)
		{
			return this.CreateMethodCallQuery<getSectionListResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), availOnly);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spUpdateCounterInBranch")]
		public int spUpdateCounterInBranch([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> childPage)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), childPage);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getIntListByJoinedString", IsComposable=true)]
		public IQueryable<getIntListByJoinedStringResult> getIntListByJoinedString([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RowData", DbType="NVarChar(MAX)")] string rowData, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SplitOn", DbType="NVarChar(5)")] string splitOn)
		{
			return this.CreateMethodCallQuery<getIntListByJoinedStringResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rowData, splitOn);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getBooksByAnnotation", IsComposable=true)]
		public IQueryable<getBooksByAnnotationResult> getBooksByAnnotation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="NVarChar(500)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsAvail", DbType="Int")] System.Nullable<int> isAvail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SearchType", DbType="Int")] System.Nullable<int> searchType)
		{
			return this.CreateMethodCallQuery<getBooksByAnnotationResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text, isAvail, searchType);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getPageList", IsComposable=true)]
		public IQueryable<getPageListResult> getPageList([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(400)")] string parentURL)
		{
			return this.CreateMethodCallQuery<getPageListResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), parentURL);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageTypes")]
	public partial class PageType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TypeName;
		
		private string _Description;
		
		private EntitySet<CMSPage> _CMSPages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public PageType()
		{
			this._CMSPages = new EntitySet<CMSPage>(new Action<CMSPage>(this.attach_CMSPages), new Action<CMSPage>(this.detach_CMSPages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageType_CMSPage", Storage="_CMSPages", ThisKey="ID", OtherKey="Type")]
		public EntitySet<CMSPage> CMSPages
		{
			get
			{
				return this._CMSPages;
			}
			set
			{
				this._CMSPages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CMSPages(CMSPage entity)
		{
			this.SendPropertyChanging();
			entity.PageType = this;
		}
		
		private void detach_CMSPages(CMSPage entity)
		{
			this.SendPropertyChanging();
			entity.PageType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookPublishers")]
	public partial class BookPublisher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<BookPublisherMargin> _BookPublisherMargins;
		
		private EntitySet<BookDescriptionCatalog> _BookDescriptionCatalogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public BookPublisher()
		{
			this._BookPublisherMargins = new EntitySet<BookPublisherMargin>(new Action<BookPublisherMargin>(this.attach_BookPublisherMargins), new Action<BookPublisherMargin>(this.detach_BookPublisherMargins));
			this._BookDescriptionCatalogs = new EntitySet<BookDescriptionCatalog>(new Action<BookDescriptionCatalog>(this.attach_BookDescriptionCatalogs), new Action<BookDescriptionCatalog>(this.detach_BookDescriptionCatalogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPublisher_BookPublisherMargin", Storage="_BookPublisherMargins", ThisKey="ID", OtherKey="PublisherID")]
		public EntitySet<BookPublisherMargin> BookPublisherMargins
		{
			get
			{
				return this._BookPublisherMargins;
			}
			set
			{
				this._BookPublisherMargins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPublisher_BookDescriptionCatalog", Storage="_BookDescriptionCatalogs", ThisKey="ID", OtherKey="PublisherID")]
		public EntitySet<BookDescriptionCatalog> BookDescriptionCatalogs
		{
			get
			{
				return this._BookDescriptionCatalogs;
			}
			set
			{
				this._BookDescriptionCatalogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookPublisherMargins(BookPublisherMargin entity)
		{
			this.SendPropertyChanging();
			entity.BookPublisher = this;
		}
		
		private void detach_BookPublisherMargins(BookPublisherMargin entity)
		{
			this.SendPropertyChanging();
			entity.BookPublisher = null;
		}
		
		private void attach_BookDescriptionCatalogs(BookDescriptionCatalog entity)
		{
			this.SendPropertyChanging();
			entity.BookPublisher = this;
		}
		
		private void detach_BookDescriptionCatalogs(BookDescriptionCatalog entity)
		{
			this.SendPropertyChanging();
			entity.BookPublisher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookPageRels")]
	public partial class BookPageRel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PageID;
		
		private int _SaleCatalogID;
		
		private EntityRef<BookSaleCatalog> _BookSaleCatalog;
		
		private EntityRef<CMSPage> _CMSPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPageIDChanging(int value);
    partial void OnPageIDChanged();
    partial void OnSaleCatalogIDChanging(int value);
    partial void OnSaleCatalogIDChanged();
    #endregion
		
		public BookPageRel()
		{
			this._BookSaleCatalog = default(EntityRef<BookSaleCatalog>);
			this._CMSPage = default(EntityRef<CMSPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int NOT NULL")]
		public int PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					if (this._CMSPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleCatalogID", DbType="Int NOT NULL")]
		public int SaleCatalogID
		{
			get
			{
				return this._SaleCatalogID;
			}
			set
			{
				if ((this._SaleCatalogID != value))
				{
					if (this._BookSaleCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSaleCatalogIDChanging(value);
					this.SendPropertyChanging();
					this._SaleCatalogID = value;
					this.SendPropertyChanged("SaleCatalogID");
					this.OnSaleCatalogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookSaleCatalog_BookPageRel", Storage="_BookSaleCatalog", ThisKey="SaleCatalogID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookSaleCatalog BookSaleCatalog
		{
			get
			{
				return this._BookSaleCatalog.Entity;
			}
			set
			{
				BookSaleCatalog previousValue = this._BookSaleCatalog.Entity;
				if (((previousValue != value) 
							|| (this._BookSaleCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookSaleCatalog.Entity = null;
						previousValue.BookPageRels.Remove(this);
					}
					this._BookSaleCatalog.Entity = value;
					if ((value != null))
					{
						value.BookPageRels.Add(this);
						this._SaleCatalogID = value.ID;
					}
					else
					{
						this._SaleCatalogID = default(int);
					}
					this.SendPropertyChanged("BookSaleCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_BookPageRel", Storage="_CMSPage", ThisKey="PageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMSPage CMSPage
		{
			get
			{
				return this._CMSPage.Entity;
			}
			set
			{
				CMSPage previousValue = this._CMSPage.Entity;
				if (((previousValue != value) 
							|| (this._CMSPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPage.Entity = null;
						previousValue.BookPageRels.Remove(this);
					}
					this._CMSPage.Entity = value;
					if ((value != null))
					{
						value.BookPageRels.Add(this);
						this._PageID = value.ID;
					}
					else
					{
						this._PageID = default(int);
					}
					this.SendPropertyChanged("CMSPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookDescriptionProviders")]
	public partial class BookDescriptionProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ProviderName;
		
		private string _Description;
		
		private bool _IsPriceProvider;
		
		private string _DataURL;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private bool _LoadCoversOnDemand;
		
		private EntitySet<BookPrice> _BookPrices;
		
		private EntitySet<BookDescriptionCatalog> _BookDescriptionCatalogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProviderNameChanging(string value);
    partial void OnProviderNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsPriceProviderChanging(bool value);
    partial void OnIsPriceProviderChanged();
    partial void OnDataURLChanging(string value);
    partial void OnDataURLChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLoadCoversOnDemandChanging(bool value);
    partial void OnLoadCoversOnDemandChanged();
    #endregion
		
		public BookDescriptionProvider()
		{
			this._BookPrices = new EntitySet<BookPrice>(new Action<BookPrice>(this.attach_BookPrices), new Action<BookPrice>(this.detach_BookPrices));
			this._BookDescriptionCatalogs = new EntitySet<BookDescriptionCatalog>(new Action<BookDescriptionCatalog>(this.attach_BookDescriptionCatalogs), new Action<BookDescriptionCatalog>(this.detach_BookDescriptionCatalogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string ProviderName
		{
			get
			{
				return this._ProviderName;
			}
			set
			{
				if ((this._ProviderName != value))
				{
					this.OnProviderNameChanging(value);
					this.SendPropertyChanging();
					this._ProviderName = value;
					this.SendPropertyChanged("ProviderName");
					this.OnProviderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPriceProvider", DbType="Bit NOT NULL")]
		public bool IsPriceProvider
		{
			get
			{
				return this._IsPriceProvider;
			}
			set
			{
				if ((this._IsPriceProvider != value))
				{
					this.OnIsPriceProviderChanging(value);
					this.SendPropertyChanging();
					this._IsPriceProvider = value;
					this.SendPropertyChanged("IsPriceProvider");
					this.OnIsPriceProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataURL", DbType="NVarChar(512)")]
		public string DataURL
		{
			get
			{
				return this._DataURL;
			}
			set
			{
				if ((this._DataURL != value))
				{
					this.OnDataURLChanging(value);
					this.SendPropertyChanging();
					this._DataURL = value;
					this.SendPropertyChanged("DataURL");
					this.OnDataURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadCoversOnDemand", DbType="Bit NOT NULL")]
		public bool LoadCoversOnDemand
		{
			get
			{
				return this._LoadCoversOnDemand;
			}
			set
			{
				if ((this._LoadCoversOnDemand != value))
				{
					this.OnLoadCoversOnDemandChanging(value);
					this.SendPropertyChanging();
					this._LoadCoversOnDemand = value;
					this.SendPropertyChanged("LoadCoversOnDemand");
					this.OnLoadCoversOnDemandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionProvider_BookPrice", Storage="_BookPrices", ThisKey="ID", OtherKey="ProviderID")]
		public EntitySet<BookPrice> BookPrices
		{
			get
			{
				return this._BookPrices;
			}
			set
			{
				this._BookPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionProvider_BookDescriptionCatalog", Storage="_BookDescriptionCatalogs", ThisKey="ID", OtherKey="DataSourceID")]
		public EntitySet<BookDescriptionCatalog> BookDescriptionCatalogs
		{
			get
			{
				return this._BookDescriptionCatalogs;
			}
			set
			{
				this._BookDescriptionCatalogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookPrices(BookPrice entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionProvider = this;
		}
		
		private void detach_BookPrices(BookPrice entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionProvider = null;
		}
		
		private void attach_BookDescriptionCatalogs(BookDescriptionCatalog entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionProvider = this;
		}
		
		private void detach_BookDescriptionCatalogs(BookDescriptionCatalog entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionProvider = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookCovers")]
	public partial class BookCover : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Data.Linq.Binary _Data;
		
		private string _Name;
		
		private int _Width;
		
		private int _Height;
		
		private EntitySet<BookDescriptionCatalog> _BookDescriptionCatalogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDataChanging(System.Data.Linq.Binary value);
    partial void OnDataChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    #endregion
		
		public BookCover()
		{
			this._BookDescriptionCatalogs = new EntitySet<BookDescriptionCatalog>(new Action<BookDescriptionCatalog>(this.attach_BookDescriptionCatalogs), new Action<BookDescriptionCatalog>(this.detach_BookDescriptionCatalogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(512)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookCover_BookDescriptionCatalog", Storage="_BookDescriptionCatalogs", ThisKey="ID", OtherKey="CoverID")]
		public EntitySet<BookDescriptionCatalog> BookDescriptionCatalogs
		{
			get
			{
				return this._BookDescriptionCatalogs;
			}
			set
			{
				this._BookDescriptionCatalogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookDescriptionCatalogs(BookDescriptionCatalog entity)
		{
			this.SendPropertyChanging();
			entity.BookCover = this;
		}
		
		private void detach_BookDescriptionCatalogs(BookDescriptionCatalog entity)
		{
			this.SendPropertyChanging();
			entity.BookCover = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookAuthorsRels")]
	public partial class BookAuthorsRel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BookDescriptionID;
		
		private int _AuthorID;
		
		private EntityRef<Author> _Author;
		
		private EntityRef<BookDescriptionCatalog> _BookDescriptionCatalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBookDescriptionIDChanging(int value);
    partial void OnBookDescriptionIDChanged();
    partial void OnAuthorIDChanging(int value);
    partial void OnAuthorIDChanged();
    #endregion
		
		public BookAuthorsRel()
		{
			this._Author = default(EntityRef<Author>);
			this._BookDescriptionCatalog = default(EntityRef<BookDescriptionCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookDescriptionID", DbType="Int NOT NULL")]
		public int BookDescriptionID
		{
			get
			{
				return this._BookDescriptionID;
			}
			set
			{
				if ((this._BookDescriptionID != value))
				{
					if (this._BookDescriptionCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookDescriptionIDChanging(value);
					this.SendPropertyChanging();
					this._BookDescriptionID = value;
					this.SendPropertyChanged("BookDescriptionID");
					this.OnBookDescriptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorID", DbType="Int NOT NULL")]
		public int AuthorID
		{
			get
			{
				return this._AuthorID;
			}
			set
			{
				if ((this._AuthorID != value))
				{
					if (this._Author.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorID = value;
					this.SendPropertyChanged("AuthorID");
					this.OnAuthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Author_BookAuthorsRel", Storage="_Author", ThisKey="AuthorID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Author Author
		{
			get
			{
				return this._Author.Entity;
			}
			set
			{
				Author previousValue = this._Author.Entity;
				if (((previousValue != value) 
							|| (this._Author.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Author.Entity = null;
						previousValue.BookAuthorsRels.Remove(this);
					}
					this._Author.Entity = value;
					if ((value != null))
					{
						value.BookAuthorsRels.Add(this);
						this._AuthorID = value.ID;
					}
					else
					{
						this._AuthorID = default(int);
					}
					this.SendPropertyChanged("Author");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionCatalog_BookAuthorsRel", Storage="_BookDescriptionCatalog", ThisKey="BookDescriptionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookDescriptionCatalog BookDescriptionCatalog
		{
			get
			{
				return this._BookDescriptionCatalog.Entity;
			}
			set
			{
				BookDescriptionCatalog previousValue = this._BookDescriptionCatalog.Entity;
				if (((previousValue != value) 
							|| (this._BookDescriptionCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookDescriptionCatalog.Entity = null;
						previousValue.BookAuthorsRels.Remove(this);
					}
					this._BookDescriptionCatalog.Entity = value;
					if ((value != null))
					{
						value.BookAuthorsRels.Add(this);
						this._BookDescriptionID = value.ID;
					}
					else
					{
						this._BookDescriptionID = default(int);
					}
					this.SendPropertyChanged("BookDescriptionCatalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Authors")]
	public partial class Author : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FIO;
		
		private string _About;
		
		private EntitySet<BookAuthorsRel> _BookAuthorsRels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFIOChanging(string value);
    partial void OnFIOChanged();
    partial void OnAboutChanging(string value);
    partial void OnAboutChanged();
    #endregion
		
		public Author()
		{
			this._BookAuthorsRels = new EntitySet<BookAuthorsRel>(new Action<BookAuthorsRel>(this.attach_BookAuthorsRels), new Action<BookAuthorsRel>(this.detach_BookAuthorsRels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIO", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string FIO
		{
			get
			{
				return this._FIO;
			}
			set
			{
				if ((this._FIO != value))
				{
					this.OnFIOChanging(value);
					this.SendPropertyChanging();
					this._FIO = value;
					this.SendPropertyChanged("FIO");
					this.OnFIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_About", DbType="NVarChar(MAX)")]
		public string About
		{
			get
			{
				return this._About;
			}
			set
			{
				if ((this._About != value))
				{
					this.OnAboutChanging(value);
					this.SendPropertyChanging();
					this._About = value;
					this.SendPropertyChanged("About");
					this.OnAboutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Author_BookAuthorsRel", Storage="_BookAuthorsRels", ThisKey="ID", OtherKey="AuthorID")]
		public EntitySet<BookAuthorsRel> BookAuthorsRels
		{
			get
			{
				return this._BookAuthorsRels;
			}
			set
			{
				this._BookAuthorsRels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookAuthorsRels(BookAuthorsRel entity)
		{
			this.SendPropertyChanging();
			entity.Author = this;
		}
		
		private void detach_BookAuthorsRels(BookAuthorsRel entity)
		{
			this.SendPropertyChanging();
			entity.Author = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookTags")]
	public partial class BookTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Tag;
		
		private EntitySet<BookTagRel> _BookTagRels;
		
		private EntitySet<TagComplexFilterItem> _TagComplexFilterItems;
		
		private EntitySet<TagSimpleFilterItem> _TagSimpleFilterItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    #endregion
		
		public BookTag()
		{
			this._BookTagRels = new EntitySet<BookTagRel>(new Action<BookTagRel>(this.attach_BookTagRels), new Action<BookTagRel>(this.detach_BookTagRels));
			this._TagComplexFilterItems = new EntitySet<TagComplexFilterItem>(new Action<TagComplexFilterItem>(this.attach_TagComplexFilterItems), new Action<TagComplexFilterItem>(this.detach_TagComplexFilterItems));
			this._TagSimpleFilterItems = new EntitySet<TagSimpleFilterItem>(new Action<TagSimpleFilterItem>(this.attach_TagSimpleFilterItems), new Action<TagSimpleFilterItem>(this.detach_TagSimpleFilterItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookTag_BookTagRel", Storage="_BookTagRels", ThisKey="ID", OtherKey="TagID")]
		public EntitySet<BookTagRel> BookTagRels
		{
			get
			{
				return this._BookTagRels;
			}
			set
			{
				this._BookTagRels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookTag_TagComplexFilterItem", Storage="_TagComplexFilterItems", ThisKey="ID", OtherKey="TagID")]
		public EntitySet<TagComplexFilterItem> TagComplexFilterItems
		{
			get
			{
				return this._TagComplexFilterItems;
			}
			set
			{
				this._TagComplexFilterItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookTag_TagSimpleFilterItem", Storage="_TagSimpleFilterItems", ThisKey="ID", OtherKey="TagID")]
		public EntitySet<TagSimpleFilterItem> TagSimpleFilterItems
		{
			get
			{
				return this._TagSimpleFilterItems;
			}
			set
			{
				this._TagSimpleFilterItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookTagRels(BookTagRel entity)
		{
			this.SendPropertyChanging();
			entity.BookTag = this;
		}
		
		private void detach_BookTagRels(BookTagRel entity)
		{
			this.SendPropertyChanging();
			entity.BookTag = null;
		}
		
		private void attach_TagComplexFilterItems(TagComplexFilterItem entity)
		{
			this.SendPropertyChanging();
			entity.BookTag = this;
		}
		
		private void detach_TagComplexFilterItems(TagComplexFilterItem entity)
		{
			this.SendPropertyChanging();
			entity.BookTag = null;
		}
		
		private void attach_TagSimpleFilterItems(TagSimpleFilterItem entity)
		{
			this.SendPropertyChanging();
			entity.BookTag = this;
		}
		
		private void detach_TagSimpleFilterItems(TagSimpleFilterItem entity)
		{
			this.SendPropertyChanging();
			entity.BookTag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookTagRels")]
	public partial class BookTagRel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DescriptionID;
		
		private int _TagID;
		
		private EntityRef<BookTag> _BookTag;
		
		private EntityRef<BookDescriptionCatalog> _BookDescriptionCatalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionIDChanging(int value);
    partial void OnDescriptionIDChanged();
    partial void OnTagIDChanging(int value);
    partial void OnTagIDChanged();
    #endregion
		
		public BookTagRel()
		{
			this._BookTag = default(EntityRef<BookTag>);
			this._BookDescriptionCatalog = default(EntityRef<BookDescriptionCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionID", DbType="Int NOT NULL")]
		public int DescriptionID
		{
			get
			{
				return this._DescriptionID;
			}
			set
			{
				if ((this._DescriptionID != value))
				{
					if (this._BookDescriptionCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDescriptionIDChanging(value);
					this.SendPropertyChanging();
					this._DescriptionID = value;
					this.SendPropertyChanged("DescriptionID");
					this.OnDescriptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", DbType="Int NOT NULL")]
		public int TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					if (this._BookTag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookTag_BookTagRel", Storage="_BookTag", ThisKey="TagID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookTag BookTag
		{
			get
			{
				return this._BookTag.Entity;
			}
			set
			{
				BookTag previousValue = this._BookTag.Entity;
				if (((previousValue != value) 
							|| (this._BookTag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookTag.Entity = null;
						previousValue.BookTagRels.Remove(this);
					}
					this._BookTag.Entity = value;
					if ((value != null))
					{
						value.BookTagRels.Add(this);
						this._TagID = value.ID;
					}
					else
					{
						this._TagID = default(int);
					}
					this.SendPropertyChanged("BookTag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionCatalog_BookTagRel", Storage="_BookDescriptionCatalog", ThisKey="DescriptionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookDescriptionCatalog BookDescriptionCatalog
		{
			get
			{
				return this._BookDescriptionCatalog.Entity;
			}
			set
			{
				BookDescriptionCatalog previousValue = this._BookDescriptionCatalog.Entity;
				if (((previousValue != value) 
							|| (this._BookDescriptionCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookDescriptionCatalog.Entity = null;
						previousValue.BookTagRels.Remove(this);
					}
					this._BookDescriptionCatalog.Entity = value;
					if ((value != null))
					{
						value.BookTagRels.Add(this);
						this._DescriptionID = value.ID;
					}
					else
					{
						this._DescriptionID = default(int);
					}
					this.SendPropertyChanged("BookDescriptionCatalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TagComplexFilterItem")]
	public partial class TagComplexFilterItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _FilterListID;
		
		private int _TagID;
		
		private EntityRef<BookTag> _BookTag;
		
		private EntityRef<TagComplexFilterList> _TagComplexFilterList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFilterListIDChanging(int value);
    partial void OnFilterListIDChanged();
    partial void OnTagIDChanging(int value);
    partial void OnTagIDChanged();
    #endregion
		
		public TagComplexFilterItem()
		{
			this._BookTag = default(EntityRef<BookTag>);
			this._TagComplexFilterList = default(EntityRef<TagComplexFilterList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterListID", DbType="Int NOT NULL")]
		public int FilterListID
		{
			get
			{
				return this._FilterListID;
			}
			set
			{
				if ((this._FilterListID != value))
				{
					if (this._TagComplexFilterList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFilterListIDChanging(value);
					this.SendPropertyChanging();
					this._FilterListID = value;
					this.SendPropertyChanged("FilterListID");
					this.OnFilterListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", DbType="Int NOT NULL")]
		public int TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					if (this._BookTag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookTag_TagComplexFilterItem", Storage="_BookTag", ThisKey="TagID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookTag BookTag
		{
			get
			{
				return this._BookTag.Entity;
			}
			set
			{
				BookTag previousValue = this._BookTag.Entity;
				if (((previousValue != value) 
							|| (this._BookTag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookTag.Entity = null;
						previousValue.TagComplexFilterItems.Remove(this);
					}
					this._BookTag.Entity = value;
					if ((value != null))
					{
						value.TagComplexFilterItems.Add(this);
						this._TagID = value.ID;
					}
					else
					{
						this._TagID = default(int);
					}
					this.SendPropertyChanged("BookTag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TagComplexFilterList_TagComplexFilterItem", Storage="_TagComplexFilterList", ThisKey="FilterListID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TagComplexFilterList TagComplexFilterList
		{
			get
			{
				return this._TagComplexFilterList.Entity;
			}
			set
			{
				TagComplexFilterList previousValue = this._TagComplexFilterList.Entity;
				if (((previousValue != value) 
							|| (this._TagComplexFilterList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TagComplexFilterList.Entity = null;
						previousValue.TagComplexFilterItems.Remove(this);
					}
					this._TagComplexFilterList.Entity = value;
					if ((value != null))
					{
						value.TagComplexFilterItems.Add(this);
						this._FilterListID = value.ID;
					}
					else
					{
						this._FilterListID = default(int);
					}
					this.SendPropertyChanged("TagComplexFilterList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TagComplexFilterLists")]
	public partial class TagComplexFilterList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ItemHeader;
		
		private string _DefaultValue;
		
		private int _ComplexFilterID;
		
		private EntitySet<TagComplexFilterItem> _TagComplexFilterItems;
		
		private EntityRef<TagComplexFilter> _TagComplexFilter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnItemHeaderChanging(string value);
    partial void OnItemHeaderChanged();
    partial void OnDefaultValueChanging(string value);
    partial void OnDefaultValueChanged();
    partial void OnComplexFilterIDChanging(int value);
    partial void OnComplexFilterIDChanged();
    #endregion
		
		public TagComplexFilterList()
		{
			this._TagComplexFilterItems = new EntitySet<TagComplexFilterItem>(new Action<TagComplexFilterItem>(this.attach_TagComplexFilterItems), new Action<TagComplexFilterItem>(this.detach_TagComplexFilterItems));
			this._TagComplexFilter = default(EntityRef<TagComplexFilter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemHeader", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string ItemHeader
		{
			get
			{
				return this._ItemHeader;
			}
			set
			{
				if ((this._ItemHeader != value))
				{
					this.OnItemHeaderChanging(value);
					this.SendPropertyChanging();
					this._ItemHeader = value;
					this.SendPropertyChanged("ItemHeader");
					this.OnItemHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultValue", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string DefaultValue
		{
			get
			{
				return this._DefaultValue;
			}
			set
			{
				if ((this._DefaultValue != value))
				{
					this.OnDefaultValueChanging(value);
					this.SendPropertyChanging();
					this._DefaultValue = value;
					this.SendPropertyChanged("DefaultValue");
					this.OnDefaultValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplexFilterID", DbType="Int NOT NULL")]
		public int ComplexFilterID
		{
			get
			{
				return this._ComplexFilterID;
			}
			set
			{
				if ((this._ComplexFilterID != value))
				{
					if (this._TagComplexFilter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComplexFilterIDChanging(value);
					this.SendPropertyChanging();
					this._ComplexFilterID = value;
					this.SendPropertyChanged("ComplexFilterID");
					this.OnComplexFilterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TagComplexFilterList_TagComplexFilterItem", Storage="_TagComplexFilterItems", ThisKey="ID", OtherKey="FilterListID")]
		public EntitySet<TagComplexFilterItem> TagComplexFilterItems
		{
			get
			{
				return this._TagComplexFilterItems;
			}
			set
			{
				this._TagComplexFilterItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TagComplexFilter_TagComplexFilterList", Storage="_TagComplexFilter", ThisKey="ComplexFilterID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TagComplexFilter TagComplexFilter
		{
			get
			{
				return this._TagComplexFilter.Entity;
			}
			set
			{
				TagComplexFilter previousValue = this._TagComplexFilter.Entity;
				if (((previousValue != value) 
							|| (this._TagComplexFilter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TagComplexFilter.Entity = null;
						previousValue.TagComplexFilterLists.Remove(this);
					}
					this._TagComplexFilter.Entity = value;
					if ((value != null))
					{
						value.TagComplexFilterLists.Add(this);
						this._ComplexFilterID = value.ID;
					}
					else
					{
						this._ComplexFilterID = default(int);
					}
					this.SendPropertyChanged("TagComplexFilter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TagComplexFilterItems(TagComplexFilterItem entity)
		{
			this.SendPropertyChanging();
			entity.TagComplexFilterList = this;
		}
		
		private void detach_TagComplexFilterItems(TagComplexFilterItem entity)
		{
			this.SendPropertyChanging();
			entity.TagComplexFilterList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TagComplexFilters")]
	public partial class TagComplexFilter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _PageID;
		
		private bool _Visible;
		
		private EntitySet<TagComplexFilterList> _TagComplexFilterLists;
		
		private EntityRef<CMSPage> _CMSPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPageIDChanging(int value);
    partial void OnPageIDChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    #endregion
		
		public TagComplexFilter()
		{
			this._TagComplexFilterLists = new EntitySet<TagComplexFilterList>(new Action<TagComplexFilterList>(this.attach_TagComplexFilterLists), new Action<TagComplexFilterList>(this.detach_TagComplexFilterLists));
			this._CMSPage = default(EntityRef<CMSPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int NOT NULL")]
		public int PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					if (this._CMSPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TagComplexFilter_TagComplexFilterList", Storage="_TagComplexFilterLists", ThisKey="ID", OtherKey="ComplexFilterID")]
		public EntitySet<TagComplexFilterList> TagComplexFilterLists
		{
			get
			{
				return this._TagComplexFilterLists;
			}
			set
			{
				this._TagComplexFilterLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_TagComplexFilter", Storage="_CMSPage", ThisKey="PageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMSPage CMSPage
		{
			get
			{
				return this._CMSPage.Entity;
			}
			set
			{
				CMSPage previousValue = this._CMSPage.Entity;
				if (((previousValue != value) 
							|| (this._CMSPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPage.Entity = null;
						previousValue.TagComplexFilters.Remove(this);
					}
					this._CMSPage.Entity = value;
					if ((value != null))
					{
						value.TagComplexFilters.Add(this);
						this._PageID = value.ID;
					}
					else
					{
						this._PageID = default(int);
					}
					this.SendPropertyChanged("CMSPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TagComplexFilterLists(TagComplexFilterList entity)
		{
			this.SendPropertyChanging();
			entity.TagComplexFilter = this;
		}
		
		private void detach_TagComplexFilterLists(TagComplexFilterList entity)
		{
			this.SendPropertyChanging();
			entity.TagComplexFilter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TagSimpleFilterItems")]
	public partial class TagSimpleFilterItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SimpleFilterID;
		
		private int _TagID;
		
		private EntityRef<BookTag> _BookTag;
		
		private EntityRef<TagSimpleFilter> _TagSimpleFilter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSimpleFilterIDChanging(int value);
    partial void OnSimpleFilterIDChanged();
    partial void OnTagIDChanging(int value);
    partial void OnTagIDChanged();
    #endregion
		
		public TagSimpleFilterItem()
		{
			this._BookTag = default(EntityRef<BookTag>);
			this._TagSimpleFilter = default(EntityRef<TagSimpleFilter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimpleFilterID", DbType="Int NOT NULL")]
		public int SimpleFilterID
		{
			get
			{
				return this._SimpleFilterID;
			}
			set
			{
				if ((this._SimpleFilterID != value))
				{
					if (this._TagSimpleFilter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSimpleFilterIDChanging(value);
					this.SendPropertyChanging();
					this._SimpleFilterID = value;
					this.SendPropertyChanged("SimpleFilterID");
					this.OnSimpleFilterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", DbType="Int NOT NULL")]
		public int TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					if (this._BookTag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookTag_TagSimpleFilterItem", Storage="_BookTag", ThisKey="TagID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookTag BookTag
		{
			get
			{
				return this._BookTag.Entity;
			}
			set
			{
				BookTag previousValue = this._BookTag.Entity;
				if (((previousValue != value) 
							|| (this._BookTag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookTag.Entity = null;
						previousValue.TagSimpleFilterItems.Remove(this);
					}
					this._BookTag.Entity = value;
					if ((value != null))
					{
						value.TagSimpleFilterItems.Add(this);
						this._TagID = value.ID;
					}
					else
					{
						this._TagID = default(int);
					}
					this.SendPropertyChanged("BookTag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TagSimpleFilter_TagSimpleFilterItem", Storage="_TagSimpleFilter", ThisKey="SimpleFilterID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TagSimpleFilter TagSimpleFilter
		{
			get
			{
				return this._TagSimpleFilter.Entity;
			}
			set
			{
				TagSimpleFilter previousValue = this._TagSimpleFilter.Entity;
				if (((previousValue != value) 
							|| (this._TagSimpleFilter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TagSimpleFilter.Entity = null;
						previousValue.TagSimpleFilterItems.Remove(this);
					}
					this._TagSimpleFilter.Entity = value;
					if ((value != null))
					{
						value.TagSimpleFilterItems.Add(this);
						this._SimpleFilterID = value.ID;
					}
					else
					{
						this._SimpleFilterID = default(int);
					}
					this.SendPropertyChanged("TagSimpleFilter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TagSimpleFilters")]
	public partial class TagSimpleFilter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _PageID;
		
		private bool _Visible;
		
		private EntitySet<TagSimpleFilterItem> _TagSimpleFilterItems;
		
		private EntityRef<CMSPage> _CMSPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPageIDChanging(int value);
    partial void OnPageIDChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    #endregion
		
		public TagSimpleFilter()
		{
			this._TagSimpleFilterItems = new EntitySet<TagSimpleFilterItem>(new Action<TagSimpleFilterItem>(this.attach_TagSimpleFilterItems), new Action<TagSimpleFilterItem>(this.detach_TagSimpleFilterItems));
			this._CMSPage = default(EntityRef<CMSPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int NOT NULL")]
		public int PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					if (this._CMSPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TagSimpleFilter_TagSimpleFilterItem", Storage="_TagSimpleFilterItems", ThisKey="ID", OtherKey="SimpleFilterID")]
		public EntitySet<TagSimpleFilterItem> TagSimpleFilterItems
		{
			get
			{
				return this._TagSimpleFilterItems;
			}
			set
			{
				this._TagSimpleFilterItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_TagSimpleFilter", Storage="_CMSPage", ThisKey="PageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMSPage CMSPage
		{
			get
			{
				return this._CMSPage.Entity;
			}
			set
			{
				CMSPage previousValue = this._CMSPage.Entity;
				if (((previousValue != value) 
							|| (this._CMSPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPage.Entity = null;
						previousValue.TagSimpleFilters.Remove(this);
					}
					this._CMSPage.Entity = value;
					if ((value != null))
					{
						value.TagSimpleFilters.Add(this);
						this._PageID = value.ID;
					}
					else
					{
						this._PageID = default(int);
					}
					this.SendPropertyChanged("CMSPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TagSimpleFilterItems(TagSimpleFilterItem entity)
		{
			this.SendPropertyChanging();
			entity.TagSimpleFilter = this;
		}
		
		private void detach_TagSimpleFilterItems(TagSimpleFilterItem entity)
		{
			this.SendPropertyChanging();
			entity.TagSimpleFilter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageTextData")]
	public partial class PageTextData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private bool _ShowHeader;
		
		private string _Text;
		
		private int _PageID;
		
		private EntityRef<CMSPage> _CMSPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnShowHeaderChanging(bool value);
    partial void OnShowHeaderChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnPageIDChanging(int value);
    partial void OnPageIDChanged();
    #endregion
		
		public PageTextData()
		{
			this._CMSPage = default(EntityRef<CMSPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowHeader", DbType="Bit NOT NULL")]
		public bool ShowHeader
		{
			get
			{
				return this._ShowHeader;
			}
			set
			{
				if ((this._ShowHeader != value))
				{
					this.OnShowHeaderChanging(value);
					this.SendPropertyChanging();
					this._ShowHeader = value;
					this.SendPropertyChanged("ShowHeader");
					this.OnShowHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int NOT NULL")]
		public int PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					if (this._CMSPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_PageTextData", Storage="_CMSPage", ThisKey="PageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMSPage CMSPage
		{
			get
			{
				return this._CMSPage.Entity;
			}
			set
			{
				CMSPage previousValue = this._CMSPage.Entity;
				if (((previousValue != value) 
							|| (this._CMSPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPage.Entity = null;
						previousValue.PageTextDatas.Remove(this);
					}
					this._CMSPage.Entity = value;
					if ((value != null))
					{
						value.PageTextDatas.Add(this);
						this._PageID = value.ID;
					}
					else
					{
						this._PageID = default(int);
					}
					this.SendPropertyChanged("CMSPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BooksOnMain")]
	public partial class BooksOnMain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _GroupNum;
		
		private int _SubGroupNum;
		
		private int _OrderNum;
		
		private int _SaleCatalogID;
		
		private EntityRef<BookSaleCatalog> _BookSaleCatalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroupNumChanging(int value);
    partial void OnGroupNumChanged();
    partial void OnSubGroupNumChanging(int value);
    partial void OnSubGroupNumChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    partial void OnSaleCatalogIDChanging(int value);
    partial void OnSaleCatalogIDChanged();
    #endregion
		
		public BooksOnMain()
		{
			this._BookSaleCatalog = default(EntityRef<BookSaleCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupNum", DbType="Int NOT NULL")]
		public int GroupNum
		{
			get
			{
				return this._GroupNum;
			}
			set
			{
				if ((this._GroupNum != value))
				{
					this.OnGroupNumChanging(value);
					this.SendPropertyChanging();
					this._GroupNum = value;
					this.SendPropertyChanged("GroupNum");
					this.OnGroupNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubGroupNum", DbType="Int NOT NULL")]
		public int SubGroupNum
		{
			get
			{
				return this._SubGroupNum;
			}
			set
			{
				if ((this._SubGroupNum != value))
				{
					this.OnSubGroupNumChanging(value);
					this.SendPropertyChanging();
					this._SubGroupNum = value;
					this.SendPropertyChanged("SubGroupNum");
					this.OnSubGroupNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleCatalogID", DbType="Int NOT NULL")]
		public int SaleCatalogID
		{
			get
			{
				return this._SaleCatalogID;
			}
			set
			{
				if ((this._SaleCatalogID != value))
				{
					if (this._BookSaleCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSaleCatalogIDChanging(value);
					this.SendPropertyChanging();
					this._SaleCatalogID = value;
					this.SendPropertyChanged("SaleCatalogID");
					this.OnSaleCatalogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookSaleCatalog_BooksOnMain", Storage="_BookSaleCatalog", ThisKey="SaleCatalogID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookSaleCatalog BookSaleCatalog
		{
			get
			{
				return this._BookSaleCatalog.Entity;
			}
			set
			{
				BookSaleCatalog previousValue = this._BookSaleCatalog.Entity;
				if (((previousValue != value) 
							|| (this._BookSaleCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookSaleCatalog.Entity = null;
						previousValue.BooksOnMains.Remove(this);
					}
					this._BookSaleCatalog.Entity = value;
					if ((value != null))
					{
						value.BooksOnMains.Add(this);
						this._SaleCatalogID = value.ID;
					}
					else
					{
						this._SaleCatalogID = default(int);
					}
					this.SendPropertyChanged("BookSaleCatalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntitySet<UsersInRole> _UsersInRoles;
		
		private EntityRef<MembershipData> _MembershipData;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<ShopCart> _ShopCarts;
		
		private EntitySet<BookComment> _BookComments;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public User()
		{
			this._UsersInRoles = new EntitySet<UsersInRole>(new Action<UsersInRole>(this.attach_UsersInRoles), new Action<UsersInRole>(this.detach_UsersInRoles));
			this._MembershipData = default(EntityRef<MembershipData>);
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._ShopCarts = new EntitySet<ShopCart>(new Action<ShopCart>(this.attach_ShopCarts), new Action<ShopCart>(this.detach_ShopCarts));
			this._BookComments = new EntitySet<BookComment>(new Action<BookComment>(this.attach_BookComments), new Action<BookComment>(this.detach_BookComments));
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersInRole", Storage="_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UsersInRole> UsersInRoles
		{
			get
			{
				return this._UsersInRoles;
			}
			set
			{
				this._UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MembershipData", Storage="_MembershipData", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public MembershipData MembershipData
		{
			get
			{
				return this._MembershipData.Entity;
			}
			set
			{
				MembershipData previousValue = this._MembershipData.Entity;
				if (((previousValue != value) 
							|| (this._MembershipData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MembershipData.Entity = null;
						previousValue.User = null;
					}
					this._MembershipData.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("MembershipData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_Orders", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ShopCart", Storage="_ShopCarts", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<ShopCart> ShopCarts
		{
			get
			{
				return this._ShopCarts;
			}
			set
			{
				this._ShopCarts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BookComment", Storage="_BookComments", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<BookComment> BookComments
		{
			get
			{
				return this._BookComments;
			}
			set
			{
				this._BookComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserProfile", Storage="_UserProfile", ThisKey="UserId", OtherKey="UserID", IsUnique=true, IsForeignKey=false)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.User = null;
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ShopCarts(ShopCart entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ShopCarts(ShopCart entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_BookComments(BookComment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BookComments(BookComment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<User> _User;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public UsersInRole()
		{
			this._User = default(EntityRef<User>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersInRole", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UsersInRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UsersInRole", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UsersInRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<UsersInRole> _UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Role()
		{
			this._UsersInRoles = new EntitySet<UsersInRole>(new Action<UsersInRole>(this.attach_UsersInRoles), new Action<UsersInRole>(this.detach_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UsersInRole", Storage="_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<UsersInRole> UsersInRoles
		{
			get
			{
				return this._UsersInRoles;
			}
			set
			{
				this._UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class MembershipData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public MembershipData()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MembershipData", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.MembershipData = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.MembershipData = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderStatus")]
	public partial class OrderStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Status;
		
		private string _EngName;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnEngNameChanging(string value);
    partial void OnEngNameChanged();
    #endregion
		
		public OrderStatus()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EngName
		{
			get
			{
				return this._EngName;
			}
			set
			{
				if ((this._EngName != value))
				{
					this.OnEngNameChanging(value);
					this.SendPropertyChanging();
					this._EngName = value;
					this.SendPropertyChanged("EngName");
					this.OnEngNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_Order", Storage="_Orders", ThisKey="ID", OtherKey="StatusID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _UserID;
		
		private System.DateTime _CreateDate;
		
		private string _ImportID;
		
		private int _StatusID;
		
		private System.Nullable<int> _Number;
		
		private EntitySet<OrderedBook> _OrderedBooks;
		
		private EntityRef<OrderDetail> _OrderDetail;
		
		private EntitySet<OrderComment> _OrderComments;
		
		private EntityRef<User> _User;
		
		private EntityRef<OrderStatus> _OrderStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnImportIDChanging(string value);
    partial void OnImportIDChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnNumberChanging(System.Nullable<int> value);
    partial void OnNumberChanged();
    #endregion
		
		public Order()
		{
			this._OrderedBooks = new EntitySet<OrderedBook>(new Action<OrderedBook>(this.attach_OrderedBooks), new Action<OrderedBook>(this.detach_OrderedBooks));
			this._OrderDetail = default(EntityRef<OrderDetail>);
			this._OrderComments = new EntitySet<OrderComment>(new Action<OrderComment>(this.attach_OrderComments), new Action<OrderComment>(this.detach_OrderComments));
			this._User = default(EntityRef<User>);
			this._OrderStatus = default(EntityRef<OrderStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportID", DbType="NVarChar(50)")]
		public string ImportID
		{
			get
			{
				return this._ImportID;
			}
			set
			{
				if ((this._ImportID != value))
				{
					this.OnImportIDChanging(value);
					this.SendPropertyChanging();
					this._ImportID = value;
					this.SendPropertyChanged("ImportID");
					this.OnImportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._OrderStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderedBook", Storage="_OrderedBooks", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<OrderedBook> OrderedBooks
		{
			get
			{
				return this._OrderedBooks;
			}
			set
			{
				this._OrderedBooks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_OrderDetail", ThisKey="ID", OtherKey="OrderID", IsUnique=true, IsForeignKey=false)]
		public OrderDetail OrderDetail
		{
			get
			{
				return this._OrderDetail.Entity;
			}
			set
			{
				OrderDetail previousValue = this._OrderDetail.Entity;
				if (((previousValue != value) 
							|| (this._OrderDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDetail.Entity = null;
						previousValue.Order = null;
					}
					this._OrderDetail.Entity = value;
					if ((value != null))
					{
						value.Order = this;
					}
					this.SendPropertyChanged("OrderDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderComment", Storage="_OrderComments", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<OrderComment> OrderComments
		{
			get
			{
				return this._OrderComments;
			}
			set
			{
				this._OrderComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_Order", Storage="_OrderStatus", ThisKey="StatusID", OtherKey="ID", IsForeignKey=true)]
		public OrderStatus OrderStatus
		{
			get
			{
				return this._OrderStatus.Entity;
			}
			set
			{
				OrderStatus previousValue = this._OrderStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrderStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderStatus.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._OrderStatus.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._StatusID = value.ID;
					}
					else
					{
						this._StatusID = default(int);
					}
					this.SendPropertyChanged("OrderStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderedBooks(OrderedBook entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderedBooks(OrderedBook entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderComments(OrderComment entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderComments(OrderComment entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderedBooks")]
	public partial class OrderedBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BookDescriptionID;
		
		private decimal _SalePrice;
		
		private int _Amount;
		
		private string _ImportUID;
		
		private int _OrderID;
		
		private System.Nullable<int> _PartnerID;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<Partner> _Partner;
		
		private EntityRef<BookDescriptionCatalog> _BookDescriptionCatalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBookDescriptionIDChanging(int value);
    partial void OnBookDescriptionIDChanged();
    partial void OnSalePriceChanging(decimal value);
    partial void OnSalePriceChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    partial void OnImportUIDChanging(string value);
    partial void OnImportUIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnPartnerIDChanging(System.Nullable<int> value);
    partial void OnPartnerIDChanged();
    #endregion
		
		public OrderedBook()
		{
			this._Order = default(EntityRef<Order>);
			this._Partner = default(EntityRef<Partner>);
			this._BookDescriptionCatalog = default(EntityRef<BookDescriptionCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookDescriptionID", DbType="Int NOT NULL")]
		public int BookDescriptionID
		{
			get
			{
				return this._BookDescriptionID;
			}
			set
			{
				if ((this._BookDescriptionID != value))
				{
					if (this._BookDescriptionCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookDescriptionIDChanging(value);
					this.SendPropertyChanging();
					this._BookDescriptionID = value;
					this.SendPropertyChanged("BookDescriptionID");
					this.OnBookDescriptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalePrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal SalePrice
		{
			get
			{
				return this._SalePrice;
			}
			set
			{
				if ((this._SalePrice != value))
				{
					this.OnSalePriceChanging(value);
					this.SendPropertyChanging();
					this._SalePrice = value;
					this.SendPropertyChanged("SalePrice");
					this.OnSalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int NOT NULL")]
		public int Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportUID", DbType="NVarChar(50)")]
		public string ImportUID
		{
			get
			{
				return this._ImportUID;
			}
			set
			{
				if ((this._ImportUID != value))
				{
					this.OnImportUIDChanging(value);
					this.SendPropertyChanging();
					this._ImportUID = value;
					this.SendPropertyChanged("ImportUID");
					this.OnImportUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerID", DbType="Int")]
		public System.Nullable<int> PartnerID
		{
			get
			{
				return this._PartnerID;
			}
			set
			{
				if ((this._PartnerID != value))
				{
					if (this._Partner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartnerIDChanging(value);
					this.SendPropertyChanging();
					this._PartnerID = value;
					this.SendPropertyChanged("PartnerID");
					this.OnPartnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderedBook", Storage="_Order", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderedBooks.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderedBooks.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Partner_OrderedBook", Storage="_Partner", ThisKey="PartnerID", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public Partner Partner
		{
			get
			{
				return this._Partner.Entity;
			}
			set
			{
				Partner previousValue = this._Partner.Entity;
				if (((previousValue != value) 
							|| (this._Partner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Partner.Entity = null;
						previousValue.OrderedBooks.Remove(this);
					}
					this._Partner.Entity = value;
					if ((value != null))
					{
						value.OrderedBooks.Add(this);
						this._PartnerID = value.ID;
					}
					else
					{
						this._PartnerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Partner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionCatalog_OrderedBook", Storage="_BookDescriptionCatalog", ThisKey="BookDescriptionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookDescriptionCatalog BookDescriptionCatalog
		{
			get
			{
				return this._BookDescriptionCatalog.Entity;
			}
			set
			{
				BookDescriptionCatalog previousValue = this._BookDescriptionCatalog.Entity;
				if (((previousValue != value) 
							|| (this._BookDescriptionCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookDescriptionCatalog.Entity = null;
						previousValue.OrderedBooks.Remove(this);
					}
					this._BookDescriptionCatalog.Entity = value;
					if ((value != null))
					{
						value.OrderedBooks.Add(this);
						this._BookDescriptionID = value.ID;
					}
					else
					{
						this._BookDescriptionID = default(int);
					}
					this.SendPropertyChanged("BookDescriptionCatalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Partners")]
	public partial class Partner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private decimal _Margin;
		
		private decimal _Discount;
		
		private int _SalePriority;
		
		private bool _Enabled;
		
		private EntitySet<OrderedBook> _OrderedBooks;
		
		private EntitySet<PartnerPriority> _PartnerPriorities;
		
		private EntitySet<BookSaleCatalog> _BookSaleCatalogs;
		
		private EntitySet<BookPublisherMargin> _BookPublisherMargins;
		
		private EntitySet<PartnerImportSetting> _PartnerImportSettings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarginChanging(decimal value);
    partial void OnMarginChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnSalePriorityChanging(int value);
    partial void OnSalePriorityChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    #endregion
		
		public Partner()
		{
			this._OrderedBooks = new EntitySet<OrderedBook>(new Action<OrderedBook>(this.attach_OrderedBooks), new Action<OrderedBook>(this.detach_OrderedBooks));
			this._PartnerPriorities = new EntitySet<PartnerPriority>(new Action<PartnerPriority>(this.attach_PartnerPriorities), new Action<PartnerPriority>(this.detach_PartnerPriorities));
			this._BookSaleCatalogs = new EntitySet<BookSaleCatalog>(new Action<BookSaleCatalog>(this.attach_BookSaleCatalogs), new Action<BookSaleCatalog>(this.detach_BookSaleCatalogs));
			this._BookPublisherMargins = new EntitySet<BookPublisherMargin>(new Action<BookPublisherMargin>(this.attach_BookPublisherMargins), new Action<BookPublisherMargin>(this.detach_BookPublisherMargins));
			this._PartnerImportSettings = new EntitySet<PartnerImportSetting>(new Action<PartnerImportSetting>(this.attach_PartnerImportSettings), new Action<PartnerImportSetting>(this.detach_PartnerImportSettings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Margin", DbType="Decimal(18,2) NOT NULL")]
		public decimal Margin
		{
			get
			{
				return this._Margin;
			}
			set
			{
				if ((this._Margin != value))
				{
					this.OnMarginChanging(value);
					this.SendPropertyChanging();
					this._Margin = value;
					this.SendPropertyChanged("Margin");
					this.OnMarginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalePriority", DbType="Int NOT NULL")]
		public int SalePriority
		{
			get
			{
				return this._SalePriority;
			}
			set
			{
				if ((this._SalePriority != value))
				{
					this.OnSalePriorityChanging(value);
					this.SendPropertyChanging();
					this._SalePriority = value;
					this.SendPropertyChanged("SalePriority");
					this.OnSalePriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Partner_OrderedBook", Storage="_OrderedBooks", ThisKey="ID", OtherKey="PartnerID")]
		public EntitySet<OrderedBook> OrderedBooks
		{
			get
			{
				return this._OrderedBooks;
			}
			set
			{
				this._OrderedBooks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Partner_PartnerPriority", Storage="_PartnerPriorities", ThisKey="ID", OtherKey="PartnerID")]
		public EntitySet<PartnerPriority> PartnerPriorities
		{
			get
			{
				return this._PartnerPriorities;
			}
			set
			{
				this._PartnerPriorities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Partner_BookSaleCatalog", Storage="_BookSaleCatalogs", ThisKey="ID", OtherKey="PartnerID")]
		public EntitySet<BookSaleCatalog> BookSaleCatalogs
		{
			get
			{
				return this._BookSaleCatalogs;
			}
			set
			{
				this._BookSaleCatalogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Partner_BookPublisherMargin", Storage="_BookPublisherMargins", ThisKey="ID", OtherKey="PartnerID")]
		public EntitySet<BookPublisherMargin> BookPublisherMargins
		{
			get
			{
				return this._BookPublisherMargins;
			}
			set
			{
				this._BookPublisherMargins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Partner_PartnerImportSetting", Storage="_PartnerImportSettings", ThisKey="ID", OtherKey="PartnerID")]
		public EntitySet<PartnerImportSetting> PartnerImportSettings
		{
			get
			{
				return this._PartnerImportSettings;
			}
			set
			{
				this._PartnerImportSettings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderedBooks(OrderedBook entity)
		{
			this.SendPropertyChanging();
			entity.Partner = this;
		}
		
		private void detach_OrderedBooks(OrderedBook entity)
		{
			this.SendPropertyChanging();
			entity.Partner = null;
		}
		
		private void attach_PartnerPriorities(PartnerPriority entity)
		{
			this.SendPropertyChanging();
			entity.Partner = this;
		}
		
		private void detach_PartnerPriorities(PartnerPriority entity)
		{
			this.SendPropertyChanging();
			entity.Partner = null;
		}
		
		private void attach_BookSaleCatalogs(BookSaleCatalog entity)
		{
			this.SendPropertyChanging();
			entity.Partner = this;
		}
		
		private void detach_BookSaleCatalogs(BookSaleCatalog entity)
		{
			this.SendPropertyChanging();
			entity.Partner = null;
		}
		
		private void attach_BookPublisherMargins(BookPublisherMargin entity)
		{
			this.SendPropertyChanging();
			entity.Partner = this;
		}
		
		private void detach_BookPublisherMargins(BookPublisherMargin entity)
		{
			this.SendPropertyChanging();
			entity.Partner = null;
		}
		
		private void attach_PartnerImportSettings(PartnerImportSetting entity)
		{
			this.SendPropertyChanging();
			entity.Partner = this;
		}
		
		private void detach_PartnerImportSettings(PartnerImportSetting entity)
		{
			this.SendPropertyChanging();
			entity.Partner = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopCarts")]
	public partial class ShopCart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _UserID;
		
		private System.Nullable<System.Guid> _TemporaryKey;
		
		private System.DateTime _LastRequested;
		
		private EntitySet<ShopCartField> _ShopCartFields;
		
		private EntitySet<ShopCartItem> _ShopCartItems;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnUserIDChanged();
    partial void OnTemporaryKeyChanging(System.Nullable<System.Guid> value);
    partial void OnTemporaryKeyChanged();
    partial void OnLastRequestedChanging(System.DateTime value);
    partial void OnLastRequestedChanged();
    #endregion
		
		public ShopCart()
		{
			this._ShopCartFields = new EntitySet<ShopCartField>(new Action<ShopCartField>(this.attach_ShopCartFields), new Action<ShopCartField>(this.detach_ShopCartFields));
			this._ShopCartItems = new EntitySet<ShopCartItem>(new Action<ShopCartItem>(this.attach_ShopCartItems), new Action<ShopCartItem>(this.detach_ShopCartItems));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TemporaryKey
		{
			get
			{
				return this._TemporaryKey;
			}
			set
			{
				if ((this._TemporaryKey != value))
				{
					this.OnTemporaryKeyChanging(value);
					this.SendPropertyChanging();
					this._TemporaryKey = value;
					this.SendPropertyChanged("TemporaryKey");
					this.OnTemporaryKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRequested", DbType="DateTime NOT NULL")]
		public System.DateTime LastRequested
		{
			get
			{
				return this._LastRequested;
			}
			set
			{
				if ((this._LastRequested != value))
				{
					this.OnLastRequestedChanging(value);
					this.SendPropertyChanging();
					this._LastRequested = value;
					this.SendPropertyChanged("LastRequested");
					this.OnLastRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCart_ShopCartField", Storage="_ShopCartFields", ThisKey="ID", OtherKey="ShopCartID")]
		public EntitySet<ShopCartField> ShopCartFields
		{
			get
			{
				return this._ShopCartFields;
			}
			set
			{
				this._ShopCartFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCart_ShopCartItem", Storage="_ShopCartItems", ThisKey="ID", OtherKey="ShopCartID")]
		public EntitySet<ShopCartItem> ShopCartItems
		{
			get
			{
				return this._ShopCartItems;
			}
			set
			{
				this._ShopCartItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ShopCart", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ShopCarts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ShopCarts.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShopCartFields(ShopCartField entity)
		{
			this.SendPropertyChanging();
			entity.ShopCart = this;
		}
		
		private void detach_ShopCartFields(ShopCartField entity)
		{
			this.SendPropertyChanging();
			entity.ShopCart = null;
		}
		
		private void attach_ShopCartItems(ShopCartItem entity)
		{
			this.SendPropertyChanging();
			entity.ShopCart = this;
		}
		
		private void detach_ShopCartItems(ShopCartItem entity)
		{
			this.SendPropertyChanging();
			entity.ShopCart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopCartFields")]
	public partial class ShopCartField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ShopCartID;
		
		private string _Name;
		
		private string _Value;
		
		private EntityRef<ShopCart> _ShopCart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnShopCartIDChanging(int value);
    partial void OnShopCartIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public ShopCartField()
		{
			this._ShopCart = default(EntityRef<ShopCart>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopCartID", DbType="Int NOT NULL")]
		public int ShopCartID
		{
			get
			{
				return this._ShopCartID;
			}
			set
			{
				if ((this._ShopCartID != value))
				{
					if (this._ShopCart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopCartIDChanging(value);
					this.SendPropertyChanging();
					this._ShopCartID = value;
					this.SendPropertyChanged("ShopCartID");
					this.OnShopCartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCart_ShopCartField", Storage="_ShopCart", ThisKey="ShopCartID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ShopCart ShopCart
		{
			get
			{
				return this._ShopCart.Entity;
			}
			set
			{
				ShopCart previousValue = this._ShopCart.Entity;
				if (((previousValue != value) 
							|| (this._ShopCart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopCart.Entity = null;
						previousValue.ShopCartFields.Remove(this);
					}
					this._ShopCart.Entity = value;
					if ((value != null))
					{
						value.ShopCartFields.Add(this);
						this._ShopCartID = value.ID;
					}
					else
					{
						this._ShopCartID = default(int);
					}
					this.SendPropertyChanged("ShopCart");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDeliveryGroups")]
	public partial class OrderDeliveryGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _GroupName;
		
		private int _OrderNum;
		
		private EntitySet<OrderDeliveryProvider> _OrderDeliveryProviders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    #endregion
		
		public OrderDeliveryGroup()
		{
			this._OrderDeliveryProviders = new EntitySet<OrderDeliveryProvider>(new Action<OrderDeliveryProvider>(this.attach_OrderDeliveryProviders), new Action<OrderDeliveryProvider>(this.detach_OrderDeliveryProviders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryGroup_OrderDeliveryProvider", Storage="_OrderDeliveryProviders", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<OrderDeliveryProvider> OrderDeliveryProviders
		{
			get
			{
				return this._OrderDeliveryProviders;
			}
			set
			{
				this._OrderDeliveryProviders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDeliveryProviders(OrderDeliveryProvider entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryGroup = this;
		}
		
		private void detach_OrderDeliveryProviders(OrderDeliveryProvider entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDetails")]
	public partial class OrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderID;
		
		private System.Nullable<int> _RegionID;
		
		private int _PaymentType;
		
		private int _DeliveryType;
		
		private decimal _DeliveryCost;
		
		private string _Address;
		
		private string _OrgData;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<OrderDeliveryRegion> _OrderDeliveryRegion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnRegionIDChanging(System.Nullable<int> value);
    partial void OnRegionIDChanged();
    partial void OnPaymentTypeChanging(int value);
    partial void OnPaymentTypeChanged();
    partial void OnDeliveryTypeChanging(int value);
    partial void OnDeliveryTypeChanged();
    partial void OnDeliveryCostChanging(decimal value);
    partial void OnDeliveryCostChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnOrgDataChanging(string value);
    partial void OnOrgDataChanged();
    #endregion
		
		public OrderDetail()
		{
			this._Order = default(EntityRef<Order>);
			this._OrderDeliveryRegion = default(EntityRef<OrderDeliveryRegion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int")]
		public System.Nullable<int> RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					if (this._OrderDeliveryRegion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="Int NOT NULL")]
		public int PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryType", DbType="Int NOT NULL")]
		public int DeliveryType
		{
			get
			{
				return this._DeliveryType;
			}
			set
			{
				if ((this._DeliveryType != value))
				{
					this.OnDeliveryTypeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryType = value;
					this.SendPropertyChanged("DeliveryType");
					this.OnDeliveryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCost", DbType="Decimal(18,2) NOT NULL")]
		public decimal DeliveryCost
		{
			get
			{
				return this._DeliveryCost;
			}
			set
			{
				if ((this._DeliveryCost != value))
				{
					this.OnDeliveryCostChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCost = value;
					this.SendPropertyChanged("DeliveryCost");
					this.OnDeliveryCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgData", DbType="NVarChar(MAX)")]
		public string OrgData
		{
			get
			{
				return this._OrgData;
			}
			set
			{
				if ((this._OrgData != value))
				{
					this.OnOrgDataChanging(value);
					this.SendPropertyChanging();
					this._OrgData = value;
					this.SendPropertyChanged("OrgData");
					this.OnOrgDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_Order", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderDetail = null;
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderDetail = this;
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryRegion_OrderDetail", Storage="_OrderDeliveryRegion", ThisKey="RegionID", OtherKey="ID", IsForeignKey=true)]
		public OrderDeliveryRegion OrderDeliveryRegion
		{
			get
			{
				return this._OrderDeliveryRegion.Entity;
			}
			set
			{
				OrderDeliveryRegion previousValue = this._OrderDeliveryRegion.Entity;
				if (((previousValue != value) 
							|| (this._OrderDeliveryRegion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDeliveryRegion.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._OrderDeliveryRegion.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._RegionID = value.ID;
					}
					else
					{
						this._RegionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderDeliveryRegion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookPrices")]
	public partial class BookPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private decimal _Price;
		
		private int _DescriptionID;
		
		private int _ProviderID;
		
		private string _Link;
		
		private EntityRef<BookDescriptionProvider> _BookDescriptionProvider;
		
		private EntityRef<BookDescriptionCatalog> _BookDescriptionCatalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnDescriptionIDChanging(int value);
    partial void OnDescriptionIDChanged();
    partial void OnProviderIDChanging(int value);
    partial void OnProviderIDChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    #endregion
		
		public BookPrice()
		{
			this._BookDescriptionProvider = default(EntityRef<BookDescriptionProvider>);
			this._BookDescriptionCatalog = default(EntityRef<BookDescriptionCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionID", DbType="Int NOT NULL")]
		public int DescriptionID
		{
			get
			{
				return this._DescriptionID;
			}
			set
			{
				if ((this._DescriptionID != value))
				{
					if (this._BookDescriptionCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDescriptionIDChanging(value);
					this.SendPropertyChanging();
					this._DescriptionID = value;
					this.SendPropertyChanged("DescriptionID");
					this.OnDescriptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderID", DbType="Int NOT NULL")]
		public int ProviderID
		{
			get
			{
				return this._ProviderID;
			}
			set
			{
				if ((this._ProviderID != value))
				{
					if (this._BookDescriptionProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProviderIDChanging(value);
					this.SendPropertyChanging();
					this._ProviderID = value;
					this.SendPropertyChanged("ProviderID");
					this.OnProviderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionProvider_BookPrice", Storage="_BookDescriptionProvider", ThisKey="ProviderID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookDescriptionProvider BookDescriptionProvider
		{
			get
			{
				return this._BookDescriptionProvider.Entity;
			}
			set
			{
				BookDescriptionProvider previousValue = this._BookDescriptionProvider.Entity;
				if (((previousValue != value) 
							|| (this._BookDescriptionProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookDescriptionProvider.Entity = null;
						previousValue.BookPrices.Remove(this);
					}
					this._BookDescriptionProvider.Entity = value;
					if ((value != null))
					{
						value.BookPrices.Add(this);
						this._ProviderID = value.ID;
					}
					else
					{
						this._ProviderID = default(int);
					}
					this.SendPropertyChanged("BookDescriptionProvider");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionCatalog_BookPrice", Storage="_BookDescriptionCatalog", ThisKey="DescriptionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookDescriptionCatalog BookDescriptionCatalog
		{
			get
			{
				return this._BookDescriptionCatalog.Entity;
			}
			set
			{
				BookDescriptionCatalog previousValue = this._BookDescriptionCatalog.Entity;
				if (((previousValue != value) 
							|| (this._BookDescriptionCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookDescriptionCatalog.Entity = null;
						previousValue.BookPrices.Remove(this);
					}
					this._BookDescriptionCatalog.Entity = value;
					if ((value != null))
					{
						value.BookPrices.Add(this);
						this._DescriptionID = value.ID;
					}
					else
					{
						this._DescriptionID = default(int);
					}
					this.SendPropertyChanged("BookDescriptionCatalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartnerPriority")]
	public partial class PartnerPriority : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PartnerID;
		
		private int _PageID;
		
		private int _Priority;
		
		private EntityRef<Partner> _Partner;
		
		private EntityRef<CMSPage> _CMSPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPartnerIDChanging(int value);
    partial void OnPartnerIDChanged();
    partial void OnPageIDChanging(int value);
    partial void OnPageIDChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    #endregion
		
		public PartnerPriority()
		{
			this._Partner = default(EntityRef<Partner>);
			this._CMSPage = default(EntityRef<CMSPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerID", DbType="Int NOT NULL")]
		public int PartnerID
		{
			get
			{
				return this._PartnerID;
			}
			set
			{
				if ((this._PartnerID != value))
				{
					if (this._Partner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartnerIDChanging(value);
					this.SendPropertyChanging();
					this._PartnerID = value;
					this.SendPropertyChanged("PartnerID");
					this.OnPartnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int NOT NULL")]
		public int PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					if (this._CMSPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Partner_PartnerPriority", Storage="_Partner", ThisKey="PartnerID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Partner Partner
		{
			get
			{
				return this._Partner.Entity;
			}
			set
			{
				Partner previousValue = this._Partner.Entity;
				if (((previousValue != value) 
							|| (this._Partner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Partner.Entity = null;
						previousValue.PartnerPriorities.Remove(this);
					}
					this._Partner.Entity = value;
					if ((value != null))
					{
						value.PartnerPriorities.Add(this);
						this._PartnerID = value.ID;
					}
					else
					{
						this._PartnerID = default(int);
					}
					this.SendPropertyChanged("Partner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_PartnerPriority", Storage="_CMSPage", ThisKey="PageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMSPage CMSPage
		{
			get
			{
				return this._CMSPage.Entity;
			}
			set
			{
				CMSPage previousValue = this._CMSPage.Entity;
				if (((previousValue != value) 
							|| (this._CMSPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPage.Entity = null;
						previousValue.PartnerPriorities.Remove(this);
					}
					this._CMSPage.Entity = value;
					if ((value != null))
					{
						value.PartnerPriorities.Add(this);
						this._PageID = value.ID;
					}
					else
					{
						this._PageID = default(int);
					}
					this.SendPropertyChanged("CMSPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDeliveryRegions")]
	public partial class OrderDeliveryRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _ImportID;
		
		private System.Nullable<int> _DeliveryProviderID;
		
		private decimal _Price;
		
		private int _DeliveryTime;
		
		private System.Nullable<decimal> _RegionDistance;
		
		private System.Nullable<int> _DistanceZoneID;
		
		private System.Nullable<int> _WeightZoneID;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntityRef<OrderDeliveryZone> _OrderDeliveryDistanceZone;
		
		private EntityRef<OrderDeliveryZone> _OrderDeliveryWeightZone;
		
		private EntityRef<OrderDeliveryProvider> _OrderDeliveryProvider;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImportIDChanging(System.Nullable<int> value);
    partial void OnImportIDChanged();
    partial void OnDeliveryProviderIDChanging(System.Nullable<int> value);
    partial void OnDeliveryProviderIDChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnDeliveryTimeChanging(int value);
    partial void OnDeliveryTimeChanged();
    partial void OnRegionDistanceChanging(System.Nullable<decimal> value);
    partial void OnRegionDistanceChanged();
    partial void OnDistanceZoneIDChanging(System.Nullable<int> value);
    partial void OnDistanceZoneIDChanged();
    partial void OnWeightZoneIDChanging(System.Nullable<int> value);
    partial void OnWeightZoneIDChanged();
    #endregion
		
		public OrderDeliveryRegion()
		{
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._OrderDeliveryDistanceZone = default(EntityRef<OrderDeliveryZone>);
			this._OrderDeliveryWeightZone = default(EntityRef<OrderDeliveryZone>);
			this._OrderDeliveryProvider = default(EntityRef<OrderDeliveryProvider>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportID", DbType="Int")]
		public System.Nullable<int> ImportID
		{
			get
			{
				return this._ImportID;
			}
			set
			{
				if ((this._ImportID != value))
				{
					this.OnImportIDChanging(value);
					this.SendPropertyChanging();
					this._ImportID = value;
					this.SendPropertyChanged("ImportID");
					this.OnImportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryProviderID", DbType="Int")]
		public System.Nullable<int> DeliveryProviderID
		{
			get
			{
				return this._DeliveryProviderID;
			}
			set
			{
				if ((this._DeliveryProviderID != value))
				{
					if (this._OrderDeliveryProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryProviderIDChanging(value);
					this.SendPropertyChanging();
					this._DeliveryProviderID = value;
					this.SendPropertyChanged("DeliveryProviderID");
					this.OnDeliveryProviderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryTime", DbType="Int NOT NULL")]
		public int DeliveryTime
		{
			get
			{
				return this._DeliveryTime;
			}
			set
			{
				if ((this._DeliveryTime != value))
				{
					this.OnDeliveryTimeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryTime = value;
					this.SendPropertyChanged("DeliveryTime");
					this.OnDeliveryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionDistance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> RegionDistance
		{
			get
			{
				return this._RegionDistance;
			}
			set
			{
				if ((this._RegionDistance != value))
				{
					this.OnRegionDistanceChanging(value);
					this.SendPropertyChanging();
					this._RegionDistance = value;
					this.SendPropertyChanged("RegionDistance");
					this.OnRegionDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceZoneID", DbType="Int")]
		public System.Nullable<int> DistanceZoneID
		{
			get
			{
				return this._DistanceZoneID;
			}
			set
			{
				if ((this._DistanceZoneID != value))
				{
					if (this._OrderDeliveryDistanceZone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistanceZoneIDChanging(value);
					this.SendPropertyChanging();
					this._DistanceZoneID = value;
					this.SendPropertyChanged("DistanceZoneID");
					this.OnDistanceZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightZoneID", DbType="Int")]
		public System.Nullable<int> WeightZoneID
		{
			get
			{
				return this._WeightZoneID;
			}
			set
			{
				if ((this._WeightZoneID != value))
				{
					if (this._OrderDeliveryWeightZone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeightZoneIDChanging(value);
					this.SendPropertyChanging();
					this._WeightZoneID = value;
					this.SendPropertyChanged("WeightZoneID");
					this.OnWeightZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryRegion_OrderDetail", Storage="_OrderDetails", ThisKey="ID", OtherKey="RegionID")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryZone_OrderDeliveryRegion", Storage="_OrderDeliveryDistanceZone", ThisKey="DistanceZoneID", OtherKey="ID", IsForeignKey=true)]
		public OrderDeliveryZone OrderDeliveryDistanceZone
		{
			get
			{
				return this._OrderDeliveryDistanceZone.Entity;
			}
			set
			{
				OrderDeliveryZone previousValue = this._OrderDeliveryDistanceZone.Entity;
				if (((previousValue != value) 
							|| (this._OrderDeliveryDistanceZone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDeliveryDistanceZone.Entity = null;
						previousValue.OrderDeliveryRegionsByDZone.Remove(this);
					}
					this._OrderDeliveryDistanceZone.Entity = value;
					if ((value != null))
					{
						value.OrderDeliveryRegionsByDZone.Add(this);
						this._DistanceZoneID = value.ID;
					}
					else
					{
						this._DistanceZoneID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderDeliveryDistanceZone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryZone_OrderDeliveryRegion1", Storage="_OrderDeliveryWeightZone", ThisKey="WeightZoneID", OtherKey="ID", IsForeignKey=true)]
		public OrderDeliveryZone OrderDeliveryWeightZone
		{
			get
			{
				return this._OrderDeliveryWeightZone.Entity;
			}
			set
			{
				OrderDeliveryZone previousValue = this._OrderDeliveryWeightZone.Entity;
				if (((previousValue != value) 
							|| (this._OrderDeliveryWeightZone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDeliveryWeightZone.Entity = null;
						previousValue.OrderDeliveryRegionsByWZone.Remove(this);
					}
					this._OrderDeliveryWeightZone.Entity = value;
					if ((value != null))
					{
						value.OrderDeliveryRegionsByWZone.Add(this);
						this._WeightZoneID = value.ID;
					}
					else
					{
						this._WeightZoneID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderDeliveryWeightZone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryProvider_OrderDeliveryRegion", Storage="_OrderDeliveryProvider", ThisKey="DeliveryProviderID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public OrderDeliveryProvider OrderDeliveryProvider
		{
			get
			{
				return this._OrderDeliveryProvider.Entity;
			}
			set
			{
				OrderDeliveryProvider previousValue = this._OrderDeliveryProvider.Entity;
				if (((previousValue != value) 
							|| (this._OrderDeliveryProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDeliveryProvider.Entity = null;
						previousValue.OrderDeliveryRegions.Remove(this);
					}
					this._OrderDeliveryProvider.Entity = value;
					if ((value != null))
					{
						value.OrderDeliveryRegions.Add(this);
						this._DeliveryProviderID = value.ID;
					}
					else
					{
						this._DeliveryProviderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderDeliveryProvider");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryRegion = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryRegion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDeliveryZones")]
	public partial class OrderDeliveryZone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsWeightZone;
		
		private System.Nullable<decimal> _WeightThreshold;
		
		private System.Nullable<int> _AlternativeZone;
		
		private EntitySet<OrderDeliveryRegion> _OrderDeliveryRegionsByDZone;
		
		private EntitySet<OrderDeliveryRegion> _OrderDeliveryRegionsByWZone;
		
		private EntitySet<OrderDeliveryZone> _OrderDeliveryZones;
		
		private EntitySet<OrderDeliveryZoneInterval> _OrderDeliveryZoneIntervals;
		
		private EntityRef<OrderDeliveryZone> _OrderDeliveryZone1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsWeightZoneChanging(bool value);
    partial void OnIsWeightZoneChanged();
    partial void OnWeightThresholdChanging(System.Nullable<decimal> value);
    partial void OnWeightThresholdChanged();
    partial void OnAlternativeZoneChanging(System.Nullable<int> value);
    partial void OnAlternativeZoneChanged();
    #endregion
		
		public OrderDeliveryZone()
		{
			this._OrderDeliveryRegionsByDZone = new EntitySet<OrderDeliveryRegion>(new Action<OrderDeliveryRegion>(this.attach_OrderDeliveryRegionsByDZone), new Action<OrderDeliveryRegion>(this.detach_OrderDeliveryRegionsByDZone));
			this._OrderDeliveryRegionsByWZone = new EntitySet<OrderDeliveryRegion>(new Action<OrderDeliveryRegion>(this.attach_OrderDeliveryRegionsByWZone), new Action<OrderDeliveryRegion>(this.detach_OrderDeliveryRegionsByWZone));
			this._OrderDeliveryZones = new EntitySet<OrderDeliveryZone>(new Action<OrderDeliveryZone>(this.attach_OrderDeliveryZones), new Action<OrderDeliveryZone>(this.detach_OrderDeliveryZones));
			this._OrderDeliveryZoneIntervals = new EntitySet<OrderDeliveryZoneInterval>(new Action<OrderDeliveryZoneInterval>(this.attach_OrderDeliveryZoneIntervals), new Action<OrderDeliveryZoneInterval>(this.detach_OrderDeliveryZoneIntervals));
			this._OrderDeliveryZone1 = default(EntityRef<OrderDeliveryZone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWeightZone", DbType="Bit NOT NULL")]
		public bool IsWeightZone
		{
			get
			{
				return this._IsWeightZone;
			}
			set
			{
				if ((this._IsWeightZone != value))
				{
					this.OnIsWeightZoneChanging(value);
					this.SendPropertyChanging();
					this._IsWeightZone = value;
					this.SendPropertyChanged("IsWeightZone");
					this.OnIsWeightZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightThreshold", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WeightThreshold
		{
			get
			{
				return this._WeightThreshold;
			}
			set
			{
				if ((this._WeightThreshold != value))
				{
					this.OnWeightThresholdChanging(value);
					this.SendPropertyChanging();
					this._WeightThreshold = value;
					this.SendPropertyChanged("WeightThreshold");
					this.OnWeightThresholdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeZone", DbType="Int")]
		public System.Nullable<int> AlternativeZone
		{
			get
			{
				return this._AlternativeZone;
			}
			set
			{
				if ((this._AlternativeZone != value))
				{
					if (this._OrderDeliveryZone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlternativeZoneChanging(value);
					this.SendPropertyChanging();
					this._AlternativeZone = value;
					this.SendPropertyChanged("AlternativeZone");
					this.OnAlternativeZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryZone_OrderDeliveryRegion", Storage="_OrderDeliveryRegionsByDZone", ThisKey="ID", OtherKey="DistanceZoneID")]
		public EntitySet<OrderDeliveryRegion> OrderDeliveryRegionsByDZone
		{
			get
			{
				return this._OrderDeliveryRegionsByDZone;
			}
			set
			{
				this._OrderDeliveryRegionsByDZone.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryZone_OrderDeliveryRegion1", Storage="_OrderDeliveryRegionsByWZone", ThisKey="ID", OtherKey="WeightZoneID")]
		public EntitySet<OrderDeliveryRegion> OrderDeliveryRegionsByWZone
		{
			get
			{
				return this._OrderDeliveryRegionsByWZone;
			}
			set
			{
				this._OrderDeliveryRegionsByWZone.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryZone_OrderDeliveryZone", Storage="_OrderDeliveryZones", ThisKey="ID", OtherKey="AlternativeZone")]
		public EntitySet<OrderDeliveryZone> AlternativeOrderDeliveryZones
		{
			get
			{
				return this._OrderDeliveryZones;
			}
			set
			{
				this._OrderDeliveryZones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryZone_OrderDeliveryZoneInterval", Storage="_OrderDeliveryZoneIntervals", ThisKey="ID", OtherKey="ZoneID")]
		public EntitySet<OrderDeliveryZoneInterval> OrderDeliveryZoneIntervals
		{
			get
			{
				return this._OrderDeliveryZoneIntervals;
			}
			set
			{
				this._OrderDeliveryZoneIntervals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryZone_OrderDeliveryZone", Storage="_OrderDeliveryZone1", ThisKey="AlternativeZone", OtherKey="ID", IsForeignKey=true)]
		public OrderDeliveryZone AlternativeOrderDeliveryZone
		{
			get
			{
				return this._OrderDeliveryZone1.Entity;
			}
			set
			{
				OrderDeliveryZone previousValue = this._OrderDeliveryZone1.Entity;
				if (((previousValue != value) 
							|| (this._OrderDeliveryZone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDeliveryZone1.Entity = null;
						previousValue.AlternativeOrderDeliveryZones.Remove(this);
					}
					this._OrderDeliveryZone1.Entity = value;
					if ((value != null))
					{
						value.AlternativeOrderDeliveryZones.Add(this);
						this._AlternativeZone = value.ID;
					}
					else
					{
						this._AlternativeZone = default(Nullable<int>);
					}
					this.SendPropertyChanged("AlternativeOrderDeliveryZone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDeliveryRegionsByDZone(OrderDeliveryRegion entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryDistanceZone = this;
		}
		
		private void detach_OrderDeliveryRegionsByDZone(OrderDeliveryRegion entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryDistanceZone = null;
		}
		
		private void attach_OrderDeliveryRegionsByWZone(OrderDeliveryRegion entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryWeightZone = this;
		}
		
		private void detach_OrderDeliveryRegionsByWZone(OrderDeliveryRegion entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryWeightZone = null;
		}
		
		private void attach_OrderDeliveryZones(OrderDeliveryZone entity)
		{
			this.SendPropertyChanging();
			entity.AlternativeOrderDeliveryZone = this;
		}
		
		private void detach_OrderDeliveryZones(OrderDeliveryZone entity)
		{
			this.SendPropertyChanging();
			entity.AlternativeOrderDeliveryZone = null;
		}
		
		private void attach_OrderDeliveryZoneIntervals(OrderDeliveryZoneInterval entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryZone = this;
		}
		
		private void detach_OrderDeliveryZoneIntervals(OrderDeliveryZoneInterval entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryZone = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDeliveryZoneIntervals")]
	public partial class OrderDeliveryZoneInterval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ZoneID;
		
		private decimal _MinInterval;
		
		private decimal _MaxInterval;
		
		private decimal _Cost;
		
		private System.Nullable<decimal> _WeightLimit;
		
		private System.Nullable<decimal> _OverWeightCost;
		
		private System.Nullable<decimal> _OverWeightUnit;
		
		private EntityRef<OrderDeliveryZone> _OrderDeliveryZone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnZoneIDChanging(int value);
    partial void OnZoneIDChanged();
    partial void OnMinIntervalChanging(decimal value);
    partial void OnMinIntervalChanged();
    partial void OnMaxIntervalChanging(decimal value);
    partial void OnMaxIntervalChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnWeightLimitChanging(System.Nullable<decimal> value);
    partial void OnWeightLimitChanged();
    partial void OnOverWeightCostChanging(System.Nullable<decimal> value);
    partial void OnOverWeightCostChanged();
    partial void OnOverWeightUnitChanging(System.Nullable<decimal> value);
    partial void OnOverWeightUnitChanged();
    #endregion
		
		public OrderDeliveryZoneInterval()
		{
			this._OrderDeliveryZone = default(EntityRef<OrderDeliveryZone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneID", DbType="Int NOT NULL")]
		public int ZoneID
		{
			get
			{
				return this._ZoneID;
			}
			set
			{
				if ((this._ZoneID != value))
				{
					if (this._OrderDeliveryZone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZoneIDChanging(value);
					this.SendPropertyChanging();
					this._ZoneID = value;
					this.SendPropertyChanged("ZoneID");
					this.OnZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinInterval", DbType="Decimal(18,2) NOT NULL")]
		public decimal MinInterval
		{
			get
			{
				return this._MinInterval;
			}
			set
			{
				if ((this._MinInterval != value))
				{
					this.OnMinIntervalChanging(value);
					this.SendPropertyChanging();
					this._MinInterval = value;
					this.SendPropertyChanged("MinInterval");
					this.OnMinIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxInterval", DbType="Decimal(18,2) NOT NULL")]
		public decimal MaxInterval
		{
			get
			{
				return this._MaxInterval;
			}
			set
			{
				if ((this._MaxInterval != value))
				{
					this.OnMaxIntervalChanging(value);
					this.SendPropertyChanging();
					this._MaxInterval = value;
					this.SendPropertyChanged("MaxInterval");
					this.OnMaxIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,2) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightLimit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WeightLimit
		{
			get
			{
				return this._WeightLimit;
			}
			set
			{
				if ((this._WeightLimit != value))
				{
					this.OnWeightLimitChanging(value);
					this.SendPropertyChanging();
					this._WeightLimit = value;
					this.SendPropertyChanged("WeightLimit");
					this.OnWeightLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverWeightCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OverWeightCost
		{
			get
			{
				return this._OverWeightCost;
			}
			set
			{
				if ((this._OverWeightCost != value))
				{
					this.OnOverWeightCostChanging(value);
					this.SendPropertyChanging();
					this._OverWeightCost = value;
					this.SendPropertyChanged("OverWeightCost");
					this.OnOverWeightCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverWeightUnit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OverWeightUnit
		{
			get
			{
				return this._OverWeightUnit;
			}
			set
			{
				if ((this._OverWeightUnit != value))
				{
					this.OnOverWeightUnitChanging(value);
					this.SendPropertyChanging();
					this._OverWeightUnit = value;
					this.SendPropertyChanged("OverWeightUnit");
					this.OnOverWeightUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryZone_OrderDeliveryZoneInterval", Storage="_OrderDeliveryZone", ThisKey="ZoneID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OrderDeliveryZone OrderDeliveryZone
		{
			get
			{
				return this._OrderDeliveryZone.Entity;
			}
			set
			{
				OrderDeliveryZone previousValue = this._OrderDeliveryZone.Entity;
				if (((previousValue != value) 
							|| (this._OrderDeliveryZone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDeliveryZone.Entity = null;
						previousValue.OrderDeliveryZoneIntervals.Remove(this);
					}
					this._OrderDeliveryZone.Entity = value;
					if ((value != null))
					{
						value.OrderDeliveryZoneIntervals.Add(this);
						this._ZoneID = value.ID;
					}
					else
					{
						this._ZoneID = default(int);
					}
					this.SendPropertyChanged("OrderDeliveryZone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookSaleCatalog")]
	public partial class BookSaleCatalog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DescriptionID;
		
		private int _PartnerID;
		
		private decimal _PartnerPrice;
		
		private bool _IsNew;
		
		private bool _IsSpec;
		
		private string _PartnerUID;
		
		private decimal _Margin;
		
		private bool _IsAvailable;
		
		private System.DateTime _LastUpdate;
		
		private bool _IsTop;
		
		private System.Nullable<decimal> _PriceOverride;
		
		private EntitySet<BookPageRel> _BookPageRels;
		
		private EntitySet<BooksOnMain> _BooksOnMains;
		
		private EntitySet<BookSpecOffer> _BookSpecOffers;
		
		private EntitySet<ShopCartItem> _ShopCartItems;
		
		private EntityRef<Partner> _Partner;
		
		private EntityRef<BookDescriptionCatalog> _BookDescriptionCatalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionIDChanging(int value);
    partial void OnDescriptionIDChanged();
    partial void OnPartnerIDChanging(int value);
    partial void OnPartnerIDChanged();
    partial void OnPartnerPriceChanging(decimal value);
    partial void OnPartnerPriceChanged();
    partial void OnIsNewChanging(bool value);
    partial void OnIsNewChanged();
    partial void OnIsSpecChanging(bool value);
    partial void OnIsSpecChanged();
    partial void OnPartnerUIDChanging(string value);
    partial void OnPartnerUIDChanged();
    partial void OnMarginChanging(decimal value);
    partial void OnMarginChanged();
    partial void OnIsAvailableChanging(bool value);
    partial void OnIsAvailableChanged();
    partial void OnLastUpdateChanging(System.DateTime value);
    partial void OnLastUpdateChanged();
    partial void OnIsTopChanging(bool value);
    partial void OnIsTopChanged();
    partial void OnPriceOverrideChanging(System.Nullable<decimal> value);
    partial void OnPriceOverrideChanged();
    #endregion
		
		public BookSaleCatalog()
		{
			this._BookPageRels = new EntitySet<BookPageRel>(new Action<BookPageRel>(this.attach_BookPageRels), new Action<BookPageRel>(this.detach_BookPageRels));
			this._BooksOnMains = new EntitySet<BooksOnMain>(new Action<BooksOnMain>(this.attach_BooksOnMains), new Action<BooksOnMain>(this.detach_BooksOnMains));
			this._BookSpecOffers = new EntitySet<BookSpecOffer>(new Action<BookSpecOffer>(this.attach_BookSpecOffers), new Action<BookSpecOffer>(this.detach_BookSpecOffers));
			this._ShopCartItems = new EntitySet<ShopCartItem>(new Action<ShopCartItem>(this.attach_ShopCartItems), new Action<ShopCartItem>(this.detach_ShopCartItems));
			this._Partner = default(EntityRef<Partner>);
			this._BookDescriptionCatalog = default(EntityRef<BookDescriptionCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionID", DbType="Int NOT NULL")]
		public int DescriptionID
		{
			get
			{
				return this._DescriptionID;
			}
			set
			{
				if ((this._DescriptionID != value))
				{
					if (this._BookDescriptionCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDescriptionIDChanging(value);
					this.SendPropertyChanging();
					this._DescriptionID = value;
					this.SendPropertyChanged("DescriptionID");
					this.OnDescriptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerID", DbType="Int NOT NULL")]
		public int PartnerID
		{
			get
			{
				return this._PartnerID;
			}
			set
			{
				if ((this._PartnerID != value))
				{
					if (this._Partner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartnerIDChanging(value);
					this.SendPropertyChanging();
					this._PartnerID = value;
					this.SendPropertyChanged("PartnerID");
					this.OnPartnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerPrice", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal PartnerPrice
		{
			get
			{
				return this._PartnerPrice;
			}
			set
			{
				if ((this._PartnerPrice != value))
				{
					this.OnPartnerPriceChanging(value);
					this.SendPropertyChanging();
					this._PartnerPrice = value;
					this.SendPropertyChanged("PartnerPrice");
					this.OnPartnerPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNew", DbType="Bit NOT NULL")]
		public bool IsNew
		{
			get
			{
				return this._IsNew;
			}
			set
			{
				if ((this._IsNew != value))
				{
					this.OnIsNewChanging(value);
					this.SendPropertyChanging();
					this._IsNew = value;
					this.SendPropertyChanged("IsNew");
					this.OnIsNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpec", DbType="Bit NOT NULL")]
		public bool IsSpec
		{
			get
			{
				return this._IsSpec;
			}
			set
			{
				if ((this._IsSpec != value))
				{
					this.OnIsSpecChanging(value);
					this.SendPropertyChanging();
					this._IsSpec = value;
					this.SendPropertyChanged("IsSpec");
					this.OnIsSpecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerUID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PartnerUID
		{
			get
			{
				return this._PartnerUID;
			}
			set
			{
				if ((this._PartnerUID != value))
				{
					this.OnPartnerUIDChanging(value);
					this.SendPropertyChanging();
					this._PartnerUID = value;
					this.SendPropertyChanged("PartnerUID");
					this.OnPartnerUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Margin", DbType="Decimal(18,2) NOT NULL")]
		public decimal Margin
		{
			get
			{
				return this._Margin;
			}
			set
			{
				if ((this._Margin != value))
				{
					this.OnMarginChanging(value);
					this.SendPropertyChanging();
					this._Margin = value;
					this.SendPropertyChanged("Margin");
					this.OnMarginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this.OnIsAvailableChanging(value);
					this.SendPropertyChanging();
					this._IsAvailable = value;
					this.SendPropertyChanged("IsAvailable");
					this.OnIsAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastUpdate
		{
			get
			{
				return this._LastUpdate;
			}
			set
			{
				if ((this._LastUpdate != value))
				{
					this.OnLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdate = value;
					this.SendPropertyChanged("LastUpdate");
					this.OnLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTop", DbType="Bit NOT NULL")]
		public bool IsTop
		{
			get
			{
				return this._IsTop;
			}
			set
			{
				if ((this._IsTop != value))
				{
					this.OnIsTopChanging(value);
					this.SendPropertyChanging();
					this._IsTop = value;
					this.SendPropertyChanged("IsTop");
					this.OnIsTopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOverride", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceOverride
		{
			get
			{
				return this._PriceOverride;
			}
			set
			{
				if ((this._PriceOverride != value))
				{
					this.OnPriceOverrideChanging(value);
					this.SendPropertyChanging();
					this._PriceOverride = value;
					this.SendPropertyChanged("PriceOverride");
					this.OnPriceOverrideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookSaleCatalog_BookPageRel", Storage="_BookPageRels", ThisKey="ID", OtherKey="SaleCatalogID")]
		public EntitySet<BookPageRel> BookPageRels
		{
			get
			{
				return this._BookPageRels;
			}
			set
			{
				this._BookPageRels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookSaleCatalog_BooksOnMain", Storage="_BooksOnMains", ThisKey="ID", OtherKey="SaleCatalogID")]
		public EntitySet<BooksOnMain> BooksOnMains
		{
			get
			{
				return this._BooksOnMains;
			}
			set
			{
				this._BooksOnMains.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookSaleCatalog_BookSpecOffer", Storage="_BookSpecOffers", ThisKey="ID", OtherKey="SaleCatalogID")]
		public EntitySet<BookSpecOffer> BookSpecOffers
		{
			get
			{
				return this._BookSpecOffers;
			}
			set
			{
				this._BookSpecOffers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookSaleCatalog_ShopCartItem", Storage="_ShopCartItems", ThisKey="ID", OtherKey="SaleCatalogID")]
		public EntitySet<ShopCartItem> ShopCartItems
		{
			get
			{
				return this._ShopCartItems;
			}
			set
			{
				this._ShopCartItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Partner_BookSaleCatalog", Storage="_Partner", ThisKey="PartnerID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Partner Partner
		{
			get
			{
				return this._Partner.Entity;
			}
			set
			{
				Partner previousValue = this._Partner.Entity;
				if (((previousValue != value) 
							|| (this._Partner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Partner.Entity = null;
						previousValue.BookSaleCatalogs.Remove(this);
					}
					this._Partner.Entity = value;
					if ((value != null))
					{
						value.BookSaleCatalogs.Add(this);
						this._PartnerID = value.ID;
					}
					else
					{
						this._PartnerID = default(int);
					}
					this.SendPropertyChanged("Partner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionCatalog_BookSaleCatalog", Storage="_BookDescriptionCatalog", ThisKey="DescriptionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookDescriptionCatalog BookDescriptionCatalog
		{
			get
			{
				return this._BookDescriptionCatalog.Entity;
			}
			set
			{
				BookDescriptionCatalog previousValue = this._BookDescriptionCatalog.Entity;
				if (((previousValue != value) 
							|| (this._BookDescriptionCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookDescriptionCatalog.Entity = null;
						previousValue.BookSaleCatalogs.Remove(this);
					}
					this._BookDescriptionCatalog.Entity = value;
					if ((value != null))
					{
						value.BookSaleCatalogs.Add(this);
						this._DescriptionID = value.ID;
					}
					else
					{
						this._DescriptionID = default(int);
					}
					this.SendPropertyChanged("BookDescriptionCatalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookPageRels(BookPageRel entity)
		{
			this.SendPropertyChanging();
			entity.BookSaleCatalog = this;
		}
		
		private void detach_BookPageRels(BookPageRel entity)
		{
			this.SendPropertyChanging();
			entity.BookSaleCatalog = null;
		}
		
		private void attach_BooksOnMains(BooksOnMain entity)
		{
			this.SendPropertyChanging();
			entity.BookSaleCatalog = this;
		}
		
		private void detach_BooksOnMains(BooksOnMain entity)
		{
			this.SendPropertyChanging();
			entity.BookSaleCatalog = null;
		}
		
		private void attach_BookSpecOffers(BookSpecOffer entity)
		{
			this.SendPropertyChanging();
			entity.BookSaleCatalog = this;
		}
		
		private void detach_BookSpecOffers(BookSpecOffer entity)
		{
			this.SendPropertyChanging();
			entity.BookSaleCatalog = null;
		}
		
		private void attach_ShopCartItems(ShopCartItem entity)
		{
			this.SendPropertyChanging();
			entity.BookSaleCatalog = this;
		}
		
		private void detach_ShopCartItems(ShopCartItem entity)
		{
			this.SendPropertyChanging();
			entity.BookSaleCatalog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookPublisherMargins")]
	public partial class BookPublisherMargin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PartnerID;
		
		private int _PublisherID;
		
		private System.Nullable<decimal> _Margin;
		
		private System.Nullable<decimal> _Discount;
		
		private EntityRef<BookPublisher> _BookPublisher;
		
		private EntityRef<Partner> _Partner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPartnerIDChanging(int value);
    partial void OnPartnerIDChanged();
    partial void OnPublisherIDChanging(int value);
    partial void OnPublisherIDChanged();
    partial void OnMarginChanging(System.Nullable<decimal> value);
    partial void OnMarginChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    #endregion
		
		public BookPublisherMargin()
		{
			this._BookPublisher = default(EntityRef<BookPublisher>);
			this._Partner = default(EntityRef<Partner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerID", DbType="Int NOT NULL")]
		public int PartnerID
		{
			get
			{
				return this._PartnerID;
			}
			set
			{
				if ((this._PartnerID != value))
				{
					if (this._Partner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartnerIDChanging(value);
					this.SendPropertyChanging();
					this._PartnerID = value;
					this.SendPropertyChanged("PartnerID");
					this.OnPartnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublisherID", DbType="Int NOT NULL")]
		public int PublisherID
		{
			get
			{
				return this._PublisherID;
			}
			set
			{
				if ((this._PublisherID != value))
				{
					if (this._BookPublisher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPublisherIDChanging(value);
					this.SendPropertyChanging();
					this._PublisherID = value;
					this.SendPropertyChanged("PublisherID");
					this.OnPublisherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Margin", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Margin
		{
			get
			{
				return this._Margin;
			}
			set
			{
				if ((this._Margin != value))
				{
					this.OnMarginChanging(value);
					this.SendPropertyChanging();
					this._Margin = value;
					this.SendPropertyChanged("Margin");
					this.OnMarginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPublisher_BookPublisherMargin", Storage="_BookPublisher", ThisKey="PublisherID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookPublisher BookPublisher
		{
			get
			{
				return this._BookPublisher.Entity;
			}
			set
			{
				BookPublisher previousValue = this._BookPublisher.Entity;
				if (((previousValue != value) 
							|| (this._BookPublisher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookPublisher.Entity = null;
						previousValue.BookPublisherMargins.Remove(this);
					}
					this._BookPublisher.Entity = value;
					if ((value != null))
					{
						value.BookPublisherMargins.Add(this);
						this._PublisherID = value.ID;
					}
					else
					{
						this._PublisherID = default(int);
					}
					this.SendPropertyChanged("BookPublisher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Partner_BookPublisherMargin", Storage="_Partner", ThisKey="PartnerID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Partner Partner
		{
			get
			{
				return this._Partner.Entity;
			}
			set
			{
				Partner previousValue = this._Partner.Entity;
				if (((previousValue != value) 
							|| (this._Partner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Partner.Entity = null;
						previousValue.BookPublisherMargins.Remove(this);
					}
					this._Partner.Entity = value;
					if ((value != null))
					{
						value.BookPublisherMargins.Add(this);
						this._PartnerID = value.ID;
					}
					else
					{
						this._PartnerID = default(int);
					}
					this.SendPropertyChanged("Partner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartnerImportSettings")]
	public partial class PartnerImportSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PartnerID;
		
		private string _ImportSectionName;
		
		private System.Nullable<int> _PageID;
		
		private bool _InList;
		
		private EntityRef<Partner> _Partner;
		
		private EntityRef<CMSPage> _CMSPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPartnerIDChanging(int value);
    partial void OnPartnerIDChanged();
    partial void OnImportSectionNameChanging(string value);
    partial void OnImportSectionNameChanged();
    partial void OnPageIDChanging(System.Nullable<int> value);
    partial void OnPageIDChanged();
    partial void OnInListChanging(bool value);
    partial void OnInListChanged();
    #endregion
		
		public PartnerImportSetting()
		{
			this._Partner = default(EntityRef<Partner>);
			this._CMSPage = default(EntityRef<CMSPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerID", DbType="Int NOT NULL")]
		public int PartnerID
		{
			get
			{
				return this._PartnerID;
			}
			set
			{
				if ((this._PartnerID != value))
				{
					if (this._Partner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartnerIDChanging(value);
					this.SendPropertyChanging();
					this._PartnerID = value;
					this.SendPropertyChanged("PartnerID");
					this.OnPartnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportSectionName", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string ImportSectionName
		{
			get
			{
				return this._ImportSectionName;
			}
			set
			{
				if ((this._ImportSectionName != value))
				{
					this.OnImportSectionNameChanging(value);
					this.SendPropertyChanging();
					this._ImportSectionName = value;
					this.SendPropertyChanged("ImportSectionName");
					this.OnImportSectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int")]
		public System.Nullable<int> PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					if (this._CMSPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InList", DbType="Bit NOT NULL")]
		public bool InList
		{
			get
			{
				return this._InList;
			}
			set
			{
				if ((this._InList != value))
				{
					this.OnInListChanging(value);
					this.SendPropertyChanging();
					this._InList = value;
					this.SendPropertyChanged("InList");
					this.OnInListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Partner_PartnerImportSetting", Storage="_Partner", ThisKey="PartnerID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Partner Partner
		{
			get
			{
				return this._Partner.Entity;
			}
			set
			{
				Partner previousValue = this._Partner.Entity;
				if (((previousValue != value) 
							|| (this._Partner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Partner.Entity = null;
						previousValue.PartnerImportSettings.Remove(this);
					}
					this._Partner.Entity = value;
					if ((value != null))
					{
						value.PartnerImportSettings.Add(this);
						this._PartnerID = value.ID;
					}
					else
					{
						this._PartnerID = default(int);
					}
					this.SendPropertyChanged("Partner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_PartnerImportSetting", Storage="_CMSPage", ThisKey="PageID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CMSPage CMSPage
		{
			get
			{
				return this._CMSPage.Entity;
			}
			set
			{
				CMSPage previousValue = this._CMSPage.Entity;
				if (((previousValue != value) 
							|| (this._CMSPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPage.Entity = null;
						previousValue.PartnerImportSettings.Remove(this);
					}
					this._CMSPage.Entity = value;
					if ((value != null))
					{
						value.PartnerImportSettings.Add(this);
						this._PageID = value.ID;
					}
					else
					{
						this._PageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CMSPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_BookCount_Available")]
	public partial class BookAvailableCounters
	{
		
		private int _ID;
		
		private string _URL;
		
		private System.Nullable<int> _BookCount;
		
		private System.Nullable<int> _ParentID;
		
		public BookAvailableCounters()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this._URL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookCount", DbType="Int")]
		public System.Nullable<int> BookCount
		{
			get
			{
				return this._BookCount;
			}
			set
			{
				if ((this._BookCount != value))
				{
					this._BookCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_BookCount_Common")]
	public partial class BookCommonCounters
	{
		
		private int _ID;
		
		private string _URL;
		
		private System.Nullable<int> _BookCount;
		
		private System.Nullable<int> _ParentID;
		
		public BookCommonCounters()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this._URL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookCount", DbType="Int")]
		public System.Nullable<int> BookCount
		{
			get
			{
				return this._BookCount;
			}
			set
			{
				if ((this._BookCount != value))
				{
					this._BookCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookDescriptionCatalog")]
	public partial class BookDescriptionCatalog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ProviderUID;
		
		private string _ISBN;
		
		private string _Header;
		
		private string _Annotation;
		
		private System.Nullable<int> _CoverID;
		
		private int _DataSourceID;
		
		private System.Nullable<int> _PublisherID;
		
		private System.Nullable<int> _PublishYear;
		
		private System.Nullable<int> _PageCount;
		
		private string _OriginalSectionPath;
		
		private string _BookType;
		
		private System.Nullable<long> _EAN;
		
		private System.Nullable<long> _TotalSum;
		
		private System.Nullable<int> _TotalCount;
		
		private System.Nullable<decimal> _Average;
		
		private EntitySet<BookAuthorsRel> _BookAuthorsRels;
		
		private EntitySet<BookTagRel> _BookTagRels;
		
		private EntitySet<OrderedBook> _OrderedBooks;
		
		private EntitySet<BookPrice> _BookPrices;
		
		private EntitySet<BookSaleCatalog> _BookSaleCatalogs;
		
		private EntitySet<BookDescriptionDataValue> _BookDescriptionDataValues;
		
		private EntitySet<BookComment> _BookComments;
		
		private EntityRef<BookCover> _BookCover;
		
		private EntityRef<BookDescriptionProvider> _BookDescriptionProvider;
		
		private EntityRef<BookPublisher> _BookPublisher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProviderUIDChanging(string value);
    partial void OnProviderUIDChanged();
    partial void OnISBNChanging(string value);
    partial void OnISBNChanged();
    partial void OnHeaderChanging(string value);
    partial void OnHeaderChanged();
    partial void OnAnnotationChanging(string value);
    partial void OnAnnotationChanged();
    partial void OnCoverIDChanging(System.Nullable<int> value);
    partial void OnCoverIDChanged();
    partial void OnDataSourceIDChanging(int value);
    partial void OnDataSourceIDChanged();
    partial void OnPublisherIDChanging(System.Nullable<int> value);
    partial void OnPublisherIDChanged();
    partial void OnPublishYearChanging(System.Nullable<int> value);
    partial void OnPublishYearChanged();
    partial void OnPageCountChanging(System.Nullable<int> value);
    partial void OnPageCountChanged();
    partial void OnOriginalSectionPathChanging(string value);
    partial void OnOriginalSectionPathChanged();
    partial void OnBookTypeChanging(string value);
    partial void OnBookTypeChanged();
    partial void OnEANChanging(System.Nullable<long> value);
    partial void OnEANChanged();
    partial void OnTotalSumChanging(System.Nullable<long> value);
    partial void OnTotalSumChanged();
    partial void OnTotalCountChanging(System.Nullable<int> value);
    partial void OnTotalCountChanged();
    partial void OnAverageChanging(System.Nullable<decimal> value);
    partial void OnAverageChanged();
    #endregion
		
		public BookDescriptionCatalog()
		{
			this._BookAuthorsRels = new EntitySet<BookAuthorsRel>(new Action<BookAuthorsRel>(this.attach_BookAuthorsRels), new Action<BookAuthorsRel>(this.detach_BookAuthorsRels));
			this._BookTagRels = new EntitySet<BookTagRel>(new Action<BookTagRel>(this.attach_BookTagRels), new Action<BookTagRel>(this.detach_BookTagRels));
			this._OrderedBooks = new EntitySet<OrderedBook>(new Action<OrderedBook>(this.attach_OrderedBooks), new Action<OrderedBook>(this.detach_OrderedBooks));
			this._BookPrices = new EntitySet<BookPrice>(new Action<BookPrice>(this.attach_BookPrices), new Action<BookPrice>(this.detach_BookPrices));
			this._BookSaleCatalogs = new EntitySet<BookSaleCatalog>(new Action<BookSaleCatalog>(this.attach_BookSaleCatalogs), new Action<BookSaleCatalog>(this.detach_BookSaleCatalogs));
			this._BookDescriptionDataValues = new EntitySet<BookDescriptionDataValue>(new Action<BookDescriptionDataValue>(this.attach_BookDescriptionDataValues), new Action<BookDescriptionDataValue>(this.detach_BookDescriptionDataValues));
			this._BookComments = new EntitySet<BookComment>(new Action<BookComment>(this.attach_BookComments), new Action<BookComment>(this.detach_BookComments));
			this._BookCover = default(EntityRef<BookCover>);
			this._BookDescriptionProvider = default(EntityRef<BookDescriptionProvider>);
			this._BookPublisher = default(EntityRef<BookPublisher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderUID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ProviderUID
		{
			get
			{
				return this._ProviderUID;
			}
			set
			{
				if ((this._ProviderUID != value))
				{
					this.OnProviderUIDChanging(value);
					this.SendPropertyChanging();
					this._ProviderUID = value;
					this.SendPropertyChanged("ProviderUID");
					this.OnProviderUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ISBN
		{
			get
			{
				return this._ISBN;
			}
			set
			{
				if ((this._ISBN != value))
				{
					this.OnISBNChanging(value);
					this.SendPropertyChanging();
					this._ISBN = value;
					this.SendPropertyChanged("ISBN");
					this.OnISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this.OnHeaderChanging(value);
					this.SendPropertyChanging();
					this._Header = value;
					this.SendPropertyChanged("Header");
					this.OnHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Annotation", DbType="NVarChar(MAX)")]
		public string Annotation
		{
			get
			{
				return this._Annotation;
			}
			set
			{
				if ((this._Annotation != value))
				{
					this.OnAnnotationChanging(value);
					this.SendPropertyChanging();
					this._Annotation = value;
					this.SendPropertyChanged("Annotation");
					this.OnAnnotationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverID", DbType="Int")]
		public System.Nullable<int> CoverID
		{
			get
			{
				return this._CoverID;
			}
			set
			{
				if ((this._CoverID != value))
				{
					if (this._BookCover.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCoverIDChanging(value);
					this.SendPropertyChanging();
					this._CoverID = value;
					this.SendPropertyChanged("CoverID");
					this.OnCoverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSourceID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DataSourceID
		{
			get
			{
				return this._DataSourceID;
			}
			set
			{
				if ((this._DataSourceID != value))
				{
					if (this._BookDescriptionProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataSourceIDChanging(value);
					this.SendPropertyChanging();
					this._DataSourceID = value;
					this.SendPropertyChanged("DataSourceID");
					this.OnDataSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublisherID", DbType="Int")]
		public System.Nullable<int> PublisherID
		{
			get
			{
				return this._PublisherID;
			}
			set
			{
				if ((this._PublisherID != value))
				{
					if (this._BookPublisher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPublisherIDChanging(value);
					this.SendPropertyChanging();
					this._PublisherID = value;
					this.SendPropertyChanged("PublisherID");
					this.OnPublisherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishYear", DbType="Int")]
		public System.Nullable<int> PublishYear
		{
			get
			{
				return this._PublishYear;
			}
			set
			{
				if ((this._PublishYear != value))
				{
					this.OnPublishYearChanging(value);
					this.SendPropertyChanging();
					this._PublishYear = value;
					this.SendPropertyChanged("PublishYear");
					this.OnPublishYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageCount", DbType="Int")]
		public System.Nullable<int> PageCount
		{
			get
			{
				return this._PageCount;
			}
			set
			{
				if ((this._PageCount != value))
				{
					this.OnPageCountChanging(value);
					this.SendPropertyChanging();
					this._PageCount = value;
					this.SendPropertyChanged("PageCount");
					this.OnPageCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalSectionPath", DbType="NVarChar(400)")]
		public string OriginalSectionPath
		{
			get
			{
				return this._OriginalSectionPath;
			}
			set
			{
				if ((this._OriginalSectionPath != value))
				{
					this.OnOriginalSectionPathChanging(value);
					this.SendPropertyChanging();
					this._OriginalSectionPath = value;
					this.SendPropertyChanged("OriginalSectionPath");
					this.OnOriginalSectionPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookType", DbType="NVarChar(100)")]
		public string BookType
		{
			get
			{
				return this._BookType;
			}
			set
			{
				if ((this._BookType != value))
				{
					this.OnBookTypeChanging(value);
					this.SendPropertyChanging();
					this._BookType = value;
					this.SendPropertyChanged("BookType");
					this.OnBookTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EAN", DbType="BigInt")]
		public System.Nullable<long> EAN
		{
			get
			{
				return this._EAN;
			}
			set
			{
				if ((this._EAN != value))
				{
					this.OnEANChanging(value);
					this.SendPropertyChanging();
					this._EAN = value;
					this.SendPropertyChanged("EAN");
					this.OnEANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSum", DbType="BigInt")]
		public System.Nullable<long> TotalSum
		{
			get
			{
				return this._TotalSum;
			}
			set
			{
				if ((this._TotalSum != value))
				{
					this.OnTotalSumChanging(value);
					this.SendPropertyChanging();
					this._TotalSum = value;
					this.SendPropertyChanged("TotalSum");
					this.OnTotalSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCount", DbType="Int")]
		public System.Nullable<int> TotalCount
		{
			get
			{
				return this._TotalCount;
			}
			set
			{
				if ((this._TotalCount != value))
				{
					this.OnTotalCountChanging(value);
					this.SendPropertyChanging();
					this._TotalCount = value;
					this.SendPropertyChanged("TotalCount");
					this.OnTotalCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Average", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> Average
		{
			get
			{
				return this._Average;
			}
			set
			{
				if ((this._Average != value))
				{
					this.OnAverageChanging(value);
					this.SendPropertyChanging();
					this._Average = value;
					this.SendPropertyChanged("Average");
					this.OnAverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionCatalog_BookAuthorsRel", Storage="_BookAuthorsRels", ThisKey="ID", OtherKey="BookDescriptionID")]
		public EntitySet<BookAuthorsRel> BookAuthorsRels
		{
			get
			{
				return this._BookAuthorsRels;
			}
			set
			{
				this._BookAuthorsRels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionCatalog_BookTagRel", Storage="_BookTagRels", ThisKey="ID", OtherKey="DescriptionID")]
		public EntitySet<BookTagRel> BookTagRels
		{
			get
			{
				return this._BookTagRels;
			}
			set
			{
				this._BookTagRels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionCatalog_OrderedBook", Storage="_OrderedBooks", ThisKey="ID", OtherKey="BookDescriptionID")]
		public EntitySet<OrderedBook> OrderedBooks
		{
			get
			{
				return this._OrderedBooks;
			}
			set
			{
				this._OrderedBooks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionCatalog_BookPrice", Storage="_BookPrices", ThisKey="ID", OtherKey="DescriptionID")]
		public EntitySet<BookPrice> BookPrices
		{
			get
			{
				return this._BookPrices;
			}
			set
			{
				this._BookPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionCatalog_BookSaleCatalog", Storage="_BookSaleCatalogs", ThisKey="ID", OtherKey="DescriptionID")]
		public EntitySet<BookSaleCatalog> BookSaleCatalogs
		{
			get
			{
				return this._BookSaleCatalogs;
			}
			set
			{
				this._BookSaleCatalogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionCatalog_BookDescriptionDataValue", Storage="_BookDescriptionDataValues", ThisKey="ID", OtherKey="DescriptionID")]
		public EntitySet<BookDescriptionDataValue> BookDescriptionDataValues
		{
			get
			{
				return this._BookDescriptionDataValues;
			}
			set
			{
				this._BookDescriptionDataValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionCatalog_BookComment", Storage="_BookComments", ThisKey="ID", OtherKey="DescriptionID")]
		public EntitySet<BookComment> BookComments
		{
			get
			{
				return this._BookComments;
			}
			set
			{
				this._BookComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookCover_BookDescriptionCatalog", Storage="_BookCover", ThisKey="CoverID", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public BookCover BookCover
		{
			get
			{
				return this._BookCover.Entity;
			}
			set
			{
				BookCover previousValue = this._BookCover.Entity;
				if (((previousValue != value) 
							|| (this._BookCover.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookCover.Entity = null;
						previousValue.BookDescriptionCatalogs.Remove(this);
					}
					this._BookCover.Entity = value;
					if ((value != null))
					{
						value.BookDescriptionCatalogs.Add(this);
						this._CoverID = value.ID;
					}
					else
					{
						this._CoverID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookCover");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionProvider_BookDescriptionCatalog", Storage="_BookDescriptionProvider", ThisKey="DataSourceID", OtherKey="ID", IsForeignKey=true)]
		public BookDescriptionProvider BookDescriptionProvider
		{
			get
			{
				return this._BookDescriptionProvider.Entity;
			}
			set
			{
				BookDescriptionProvider previousValue = this._BookDescriptionProvider.Entity;
				if (((previousValue != value) 
							|| (this._BookDescriptionProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookDescriptionProvider.Entity = null;
						previousValue.BookDescriptionCatalogs.Remove(this);
					}
					this._BookDescriptionProvider.Entity = value;
					if ((value != null))
					{
						value.BookDescriptionCatalogs.Add(this);
						this._DataSourceID = value.ID;
					}
					else
					{
						this._DataSourceID = default(int);
					}
					this.SendPropertyChanged("BookDescriptionProvider");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookPublisher_BookDescriptionCatalog", Storage="_BookPublisher", ThisKey="PublisherID", OtherKey="ID", IsForeignKey=true)]
		public BookPublisher BookPublisher
		{
			get
			{
				return this._BookPublisher.Entity;
			}
			set
			{
				BookPublisher previousValue = this._BookPublisher.Entity;
				if (((previousValue != value) 
							|| (this._BookPublisher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookPublisher.Entity = null;
						previousValue.BookDescriptionCatalogs.Remove(this);
					}
					this._BookPublisher.Entity = value;
					if ((value != null))
					{
						value.BookDescriptionCatalogs.Add(this);
						this._PublisherID = value.ID;
					}
					else
					{
						this._PublisherID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookPublisher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookAuthorsRels(BookAuthorsRel entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionCatalog = this;
		}
		
		private void detach_BookAuthorsRels(BookAuthorsRel entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionCatalog = null;
		}
		
		private void attach_BookTagRels(BookTagRel entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionCatalog = this;
		}
		
		private void detach_BookTagRels(BookTagRel entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionCatalog = null;
		}
		
		private void attach_OrderedBooks(OrderedBook entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionCatalog = this;
		}
		
		private void detach_OrderedBooks(OrderedBook entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionCatalog = null;
		}
		
		private void attach_BookPrices(BookPrice entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionCatalog = this;
		}
		
		private void detach_BookPrices(BookPrice entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionCatalog = null;
		}
		
		private void attach_BookSaleCatalogs(BookSaleCatalog entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionCatalog = this;
		}
		
		private void detach_BookSaleCatalogs(BookSaleCatalog entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionCatalog = null;
		}
		
		private void attach_BookDescriptionDataValues(BookDescriptionDataValue entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionCatalog = this;
		}
		
		private void detach_BookDescriptionDataValues(BookDescriptionDataValue entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionCatalog = null;
		}
		
		private void attach_BookComments(BookComment entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionCatalog = this;
		}
		
		private void detach_BookComments(BookComment entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionCatalog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteSettings")]
	public partial class SiteSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Setting;
		
		private string _Value;
		
		private string _Title;
		
		private int _OrderNum;
		
		private string _Editor;
		
		private string _ObjectType;
		
		private string _GroupName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSettingChanging(string value);
    partial void OnSettingChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnObjectTypeChanging(string value);
    partial void OnObjectTypeChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    #endregion
		
		public SiteSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Setting", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Setting
		{
			get
			{
				return this._Setting;
			}
			set
			{
				if ((this._Setting != value))
				{
					this.OnSettingChanging(value);
					this.SendPropertyChanging();
					this._Setting = value;
					this.SendPropertyChanged("Setting");
					this.OnSettingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="NVarChar(50)")]
		public string ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderPaymentProviders")]
	public partial class OrderPaymentProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _SprinterUID;
		
		private string _Code;
		
		private EntitySet<OrderPaymentDeliveryRel> _OrderPaymentDeliveryRels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSprinterUIDChanging(int value);
    partial void OnSprinterUIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public OrderPaymentProvider()
		{
			this._OrderPaymentDeliveryRels = new EntitySet<OrderPaymentDeliveryRel>(new Action<OrderPaymentDeliveryRel>(this.attach_OrderPaymentDeliveryRels), new Action<OrderPaymentDeliveryRel>(this.detach_OrderPaymentDeliveryRels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SprinterUID", DbType="Int NOT NULL")]
		public int SprinterUID
		{
			get
			{
				return this._SprinterUID;
			}
			set
			{
				if ((this._SprinterUID != value))
				{
					this.OnSprinterUIDChanging(value);
					this.SendPropertyChanging();
					this._SprinterUID = value;
					this.SendPropertyChanged("SprinterUID");
					this.OnSprinterUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPaymentProvider_OrderPaymentDeliveryRel", Storage="_OrderPaymentDeliveryRels", ThisKey="ID", OtherKey="PaymentProviderID")]
		public EntitySet<OrderPaymentDeliveryRel> OrderPaymentDeliveryRels
		{
			get
			{
				return this._OrderPaymentDeliveryRels;
			}
			set
			{
				this._OrderPaymentDeliveryRels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderPaymentDeliveryRels(OrderPaymentDeliveryRel entity)
		{
			this.SendPropertyChanging();
			entity.OrderPaymentProvider = this;
		}
		
		private void detach_OrderPaymentDeliveryRels(OrderPaymentDeliveryRel entity)
		{
			this.SendPropertyChanging();
			entity.OrderPaymentProvider = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderPaymentDeliveryRels")]
	public partial class OrderPaymentDeliveryRel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DeliveryProviderID;
		
		private int _PaymentProviderID;
		
		private EntityRef<OrderPaymentProvider> _OrderPaymentProvider;
		
		private EntityRef<OrderDeliveryProvider> _OrderDeliveryProvider;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDeliveryProviderIDChanging(int value);
    partial void OnDeliveryProviderIDChanged();
    partial void OnPaymentProviderIDChanging(int value);
    partial void OnPaymentProviderIDChanged();
    #endregion
		
		public OrderPaymentDeliveryRel()
		{
			this._OrderPaymentProvider = default(EntityRef<OrderPaymentProvider>);
			this._OrderDeliveryProvider = default(EntityRef<OrderDeliveryProvider>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryProviderID", DbType="Int NOT NULL")]
		public int DeliveryProviderID
		{
			get
			{
				return this._DeliveryProviderID;
			}
			set
			{
				if ((this._DeliveryProviderID != value))
				{
					if (this._OrderDeliveryProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryProviderIDChanging(value);
					this.SendPropertyChanging();
					this._DeliveryProviderID = value;
					this.SendPropertyChanged("DeliveryProviderID");
					this.OnDeliveryProviderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentProviderID", DbType="Int NOT NULL")]
		public int PaymentProviderID
		{
			get
			{
				return this._PaymentProviderID;
			}
			set
			{
				if ((this._PaymentProviderID != value))
				{
					if (this._OrderPaymentProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentProviderIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentProviderID = value;
					this.SendPropertyChanged("PaymentProviderID");
					this.OnPaymentProviderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPaymentProvider_OrderPaymentDeliveryRel", Storage="_OrderPaymentProvider", ThisKey="PaymentProviderID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OrderPaymentProvider OrderPaymentProvider
		{
			get
			{
				return this._OrderPaymentProvider.Entity;
			}
			set
			{
				OrderPaymentProvider previousValue = this._OrderPaymentProvider.Entity;
				if (((previousValue != value) 
							|| (this._OrderPaymentProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderPaymentProvider.Entity = null;
						previousValue.OrderPaymentDeliveryRels.Remove(this);
					}
					this._OrderPaymentProvider.Entity = value;
					if ((value != null))
					{
						value.OrderPaymentDeliveryRels.Add(this);
						this._PaymentProviderID = value.ID;
					}
					else
					{
						this._PaymentProviderID = default(int);
					}
					this.SendPropertyChanged("OrderPaymentProvider");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryProvider_OrderPaymentDeliveryRel", Storage="_OrderDeliveryProvider", ThisKey="DeliveryProviderID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OrderDeliveryProvider OrderDeliveryProvider
		{
			get
			{
				return this._OrderDeliveryProvider.Entity;
			}
			set
			{
				OrderDeliveryProvider previousValue = this._OrderDeliveryProvider.Entity;
				if (((previousValue != value) 
							|| (this._OrderDeliveryProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDeliveryProvider.Entity = null;
						previousValue.OrderPaymentDeliveryRels.Remove(this);
					}
					this._OrderDeliveryProvider.Entity = value;
					if ((value != null))
					{
						value.OrderPaymentDeliveryRels.Add(this);
						this._DeliveryProviderID = value.ID;
					}
					else
					{
						this._DeliveryProviderID = default(int);
					}
					this.SendPropertyChanged("OrderDeliveryProvider");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pages")]
	public partial class CMSPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PageName;
		
		private string _URL;
		
		private string _FullName;
		
		private string _Title;
		
		private string _Keywords;
		
		private string _Description;
		
		private System.Nullable<int> _ParentID;
		
		private bool _Visible;
		
		private int _Type;
		
		private int _OrderNum;
		
		private bool _ViewMenu;
		
		private System.Nullable<int> _ImportID;
		
		private string _SystemData;
		
		private int _ActiveCount;
		
		private int _AllCount;
		
		private string _OriginalURL;
		
		private EntitySet<BookPageRel> _BookPageRels;
		
		private EntitySet<TagComplexFilter> _TagComplexFilters;
		
		private EntitySet<TagSimpleFilter> _TagSimpleFilters;
		
		private EntitySet<PageTextData> _PageTextDatas;
		
		private EntitySet<PartnerPriority> _PartnerPriorities;
		
		private EntitySet<PartnerImportSetting> _PartnerImportSettings;
		
		private EntitySet<CMSPage> _Children;
		
		private EntityRef<CMSPage> _ParentPage;
		
		private EntityRef<PageType> _PageType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    partial void OnViewMenuChanging(bool value);
    partial void OnViewMenuChanged();
    partial void OnImportIDChanging(System.Nullable<int> value);
    partial void OnImportIDChanged();
    partial void OnSystemDataChanging(string value);
    partial void OnSystemDataChanged();
    partial void OnActiveCountChanging(int value);
    partial void OnActiveCountChanged();
    partial void OnAllCountChanging(int value);
    partial void OnAllCountChanged();
    partial void OnOriginalURLChanging(string value);
    partial void OnOriginalURLChanged();
    #endregion
		
		public CMSPage()
		{
			this._BookPageRels = new EntitySet<BookPageRel>(new Action<BookPageRel>(this.attach_BookPageRels), new Action<BookPageRel>(this.detach_BookPageRels));
			this._TagComplexFilters = new EntitySet<TagComplexFilter>(new Action<TagComplexFilter>(this.attach_TagComplexFilters), new Action<TagComplexFilter>(this.detach_TagComplexFilters));
			this._TagSimpleFilters = new EntitySet<TagSimpleFilter>(new Action<TagSimpleFilter>(this.attach_TagSimpleFilters), new Action<TagSimpleFilter>(this.detach_TagSimpleFilters));
			this._PageTextDatas = new EntitySet<PageTextData>(new Action<PageTextData>(this.attach_PageTextDatas), new Action<PageTextData>(this.detach_PageTextDatas));
			this._PartnerPriorities = new EntitySet<PartnerPriority>(new Action<PartnerPriority>(this.attach_PartnerPriorities), new Action<PartnerPriority>(this.detach_PartnerPriorities));
			this._PartnerImportSettings = new EntitySet<PartnerImportSetting>(new Action<PartnerImportSetting>(this.attach_PartnerImportSettings), new Action<PartnerImportSetting>(this.detach_PartnerImportSettings));
			this._Children = new EntitySet<CMSPage>(new Action<CMSPage>(this.attach_Children), new Action<CMSPage>(this.detach_Children));
			this._ParentPage = default(EntityRef<CMSPage>);
			this._PageType = default(EntityRef<PageType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="NVarChar(MAX)")]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._ParentPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					if (this._PageType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewMenu", DbType="Bit NOT NULL")]
		public bool ViewMenu
		{
			get
			{
				return this._ViewMenu;
			}
			set
			{
				if ((this._ViewMenu != value))
				{
					this.OnViewMenuChanging(value);
					this.SendPropertyChanging();
					this._ViewMenu = value;
					this.SendPropertyChanged("ViewMenu");
					this.OnViewMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportID", DbType="Int")]
		public System.Nullable<int> ImportID
		{
			get
			{
				return this._ImportID;
			}
			set
			{
				if ((this._ImportID != value))
				{
					this.OnImportIDChanging(value);
					this.SendPropertyChanging();
					this._ImportID = value;
					this.SendPropertyChanged("ImportID");
					this.OnImportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemData", DbType="NVarChar(100)")]
		public string SystemData
		{
			get
			{
				return this._SystemData;
			}
			set
			{
				if ((this._SystemData != value))
				{
					this.OnSystemDataChanging(value);
					this.SendPropertyChanging();
					this._SystemData = value;
					this.SendPropertyChanged("SystemData");
					this.OnSystemDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveCount", DbType="Int NOT NULL")]
		public int ActiveCount
		{
			get
			{
				return this._ActiveCount;
			}
			set
			{
				if ((this._ActiveCount != value))
				{
					this.OnActiveCountChanging(value);
					this.SendPropertyChanging();
					this._ActiveCount = value;
					this.SendPropertyChanged("ActiveCount");
					this.OnActiveCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllCount", DbType="Int NOT NULL")]
		public int AllCount
		{
			get
			{
				return this._AllCount;
			}
			set
			{
				if ((this._AllCount != value))
				{
					this.OnAllCountChanging(value);
					this.SendPropertyChanging();
					this._AllCount = value;
					this.SendPropertyChanged("AllCount");
					this.OnAllCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalURL", DbType="NVarChar(400)")]
		public string OriginalURL
		{
			get
			{
				return this._OriginalURL;
			}
			set
			{
				if ((this._OriginalURL != value))
				{
					this.OnOriginalURLChanging(value);
					this.SendPropertyChanging();
					this._OriginalURL = value;
					this.SendPropertyChanged("OriginalURL");
					this.OnOriginalURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_BookPageRel", Storage="_BookPageRels", ThisKey="ID", OtherKey="PageID")]
		public EntitySet<BookPageRel> BookPageRels
		{
			get
			{
				return this._BookPageRels;
			}
			set
			{
				this._BookPageRels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_TagComplexFilter", Storage="_TagComplexFilters", ThisKey="ID", OtherKey="PageID")]
		public EntitySet<TagComplexFilter> TagComplexFilters
		{
			get
			{
				return this._TagComplexFilters;
			}
			set
			{
				this._TagComplexFilters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_TagSimpleFilter", Storage="_TagSimpleFilters", ThisKey="ID", OtherKey="PageID")]
		public EntitySet<TagSimpleFilter> TagSimpleFilters
		{
			get
			{
				return this._TagSimpleFilters;
			}
			set
			{
				this._TagSimpleFilters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_PageTextData", Storage="_PageTextDatas", ThisKey="ID", OtherKey="PageID")]
		public EntitySet<PageTextData> PageTextDatas
		{
			get
			{
				return this._PageTextDatas;
			}
			set
			{
				this._PageTextDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_PartnerPriority", Storage="_PartnerPriorities", ThisKey="ID", OtherKey="PageID")]
		public EntitySet<PartnerPriority> PartnerPriorities
		{
			get
			{
				return this._PartnerPriorities;
			}
			set
			{
				this._PartnerPriorities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_PartnerImportSetting", Storage="_PartnerImportSettings", ThisKey="ID", OtherKey="PageID")]
		public EntitySet<PartnerImportSetting> PartnerImportSettings
		{
			get
			{
				return this._PartnerImportSettings;
			}
			set
			{
				this._PartnerImportSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_CMSPage", Storage="_Children", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<CMSPage> Children
		{
			get
			{
				return this._Children;
			}
			set
			{
				this._Children.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_CMSPage", Storage="_ParentPage", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public CMSPage ParentPage
		{
			get
			{
				return this._ParentPage.Entity;
			}
			set
			{
				CMSPage previousValue = this._ParentPage.Entity;
				if (((previousValue != value) 
							|| (this._ParentPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentPage.Entity = null;
						previousValue.Children.Remove(this);
					}
					this._ParentPage.Entity = value;
					if ((value != null))
					{
						value.Children.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentPage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageType_CMSPage", Storage="_PageType", ThisKey="Type", OtherKey="ID", IsForeignKey=true)]
		public PageType PageType
		{
			get
			{
				return this._PageType.Entity;
			}
			set
			{
				PageType previousValue = this._PageType.Entity;
				if (((previousValue != value) 
							|| (this._PageType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PageType.Entity = null;
						previousValue.CMSPages.Remove(this);
					}
					this._PageType.Entity = value;
					if ((value != null))
					{
						value.CMSPages.Add(this);
						this._Type = value.ID;
					}
					else
					{
						this._Type = default(int);
					}
					this.SendPropertyChanged("PageType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookPageRels(BookPageRel entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = this;
		}
		
		private void detach_BookPageRels(BookPageRel entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = null;
		}
		
		private void attach_TagComplexFilters(TagComplexFilter entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = this;
		}
		
		private void detach_TagComplexFilters(TagComplexFilter entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = null;
		}
		
		private void attach_TagSimpleFilters(TagSimpleFilter entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = this;
		}
		
		private void detach_TagSimpleFilters(TagSimpleFilter entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = null;
		}
		
		private void attach_PageTextDatas(PageTextData entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = this;
		}
		
		private void detach_PageTextDatas(PageTextData entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = null;
		}
		
		private void attach_PartnerPriorities(PartnerPriority entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = this;
		}
		
		private void detach_PartnerPriorities(PartnerPriority entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = null;
		}
		
		private void attach_PartnerImportSettings(PartnerImportSetting entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = this;
		}
		
		private void detach_PartnerImportSettings(PartnerImportSetting entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = null;
		}
		
		private void attach_Children(CMSPage entity)
		{
			this.SendPropertyChanging();
			entity.ParentPage = this;
		}
		
		private void detach_Children(CMSPage entity)
		{
			this.SendPropertyChanging();
			entity.ParentPage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookDescriptionDataKeys")]
	public partial class BookDescriptionDataKey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DataKey;
		
		private string _Description;
		
		private EntitySet<BookDescriptionDataValue> _BookDescriptionDataValues;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDataKeyChanging(string value);
    partial void OnDataKeyChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public BookDescriptionDataKey()
		{
			this._BookDescriptionDataValues = new EntitySet<BookDescriptionDataValue>(new Action<BookDescriptionDataValue>(this.attach_BookDescriptionDataValues), new Action<BookDescriptionDataValue>(this.detach_BookDescriptionDataValues));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataKey", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DataKey
		{
			get
			{
				return this._DataKey;
			}
			set
			{
				if ((this._DataKey != value))
				{
					this.OnDataKeyChanging(value);
					this.SendPropertyChanging();
					this._DataKey = value;
					this.SendPropertyChanged("DataKey");
					this.OnDataKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionDataKey_BookDescriptionDataValue", Storage="_BookDescriptionDataValues", ThisKey="ID", OtherKey="DataKeyID")]
		public EntitySet<BookDescriptionDataValue> BookDescriptionDataValues
		{
			get
			{
				return this._BookDescriptionDataValues;
			}
			set
			{
				this._BookDescriptionDataValues.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookDescriptionDataValues(BookDescriptionDataValue entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionDataKey = this;
		}
		
		private void detach_BookDescriptionDataValues(BookDescriptionDataValue entity)
		{
			this.SendPropertyChanging();
			entity.BookDescriptionDataKey = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookDescriptionDataValues")]
	public partial class BookDescriptionDataValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DescriptionID;
		
		private int _DataKeyID;
		
		private string _DataValue;
		
		private EntityRef<BookDescriptionCatalog> _BookDescriptionCatalog;
		
		private EntityRef<BookDescriptionDataKey> _BookDescriptionDataKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionIDChanging(int value);
    partial void OnDescriptionIDChanged();
    partial void OnDataKeyIDChanging(int value);
    partial void OnDataKeyIDChanged();
    partial void OnDataValueChanging(string value);
    partial void OnDataValueChanged();
    #endregion
		
		public BookDescriptionDataValue()
		{
			this._BookDescriptionCatalog = default(EntityRef<BookDescriptionCatalog>);
			this._BookDescriptionDataKey = default(EntityRef<BookDescriptionDataKey>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionID", DbType="Int NOT NULL")]
		public int DescriptionID
		{
			get
			{
				return this._DescriptionID;
			}
			set
			{
				if ((this._DescriptionID != value))
				{
					if (this._BookDescriptionCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDescriptionIDChanging(value);
					this.SendPropertyChanging();
					this._DescriptionID = value;
					this.SendPropertyChanged("DescriptionID");
					this.OnDescriptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataKeyID", DbType="Int NOT NULL")]
		public int DataKeyID
		{
			get
			{
				return this._DataKeyID;
			}
			set
			{
				if ((this._DataKeyID != value))
				{
					if (this._BookDescriptionDataKey.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataKeyIDChanging(value);
					this.SendPropertyChanging();
					this._DataKeyID = value;
					this.SendPropertyChanged("DataKeyID");
					this.OnDataKeyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataValue", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string DataValue
		{
			get
			{
				return this._DataValue;
			}
			set
			{
				if ((this._DataValue != value))
				{
					this.OnDataValueChanging(value);
					this.SendPropertyChanging();
					this._DataValue = value;
					this.SendPropertyChanged("DataValue");
					this.OnDataValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionCatalog_BookDescriptionDataValue", Storage="_BookDescriptionCatalog", ThisKey="DescriptionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookDescriptionCatalog BookDescriptionCatalog
		{
			get
			{
				return this._BookDescriptionCatalog.Entity;
			}
			set
			{
				BookDescriptionCatalog previousValue = this._BookDescriptionCatalog.Entity;
				if (((previousValue != value) 
							|| (this._BookDescriptionCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookDescriptionCatalog.Entity = null;
						previousValue.BookDescriptionDataValues.Remove(this);
					}
					this._BookDescriptionCatalog.Entity = value;
					if ((value != null))
					{
						value.BookDescriptionDataValues.Add(this);
						this._DescriptionID = value.ID;
					}
					else
					{
						this._DescriptionID = default(int);
					}
					this.SendPropertyChanged("BookDescriptionCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionDataKey_BookDescriptionDataValue", Storage="_BookDescriptionDataKey", ThisKey="DataKeyID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookDescriptionDataKey BookDescriptionDataKey
		{
			get
			{
				return this._BookDescriptionDataKey.Entity;
			}
			set
			{
				BookDescriptionDataKey previousValue = this._BookDescriptionDataKey.Entity;
				if (((previousValue != value) 
							|| (this._BookDescriptionDataKey.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookDescriptionDataKey.Entity = null;
						previousValue.BookDescriptionDataValues.Remove(this);
					}
					this._BookDescriptionDataKey.Entity = value;
					if ((value != null))
					{
						value.BookDescriptionDataValues.Add(this);
						this._DataKeyID = value.ID;
					}
					else
					{
						this._DataKeyID = default(int);
					}
					this.SendPropertyChanged("BookDescriptionDataKey");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookComments")]
	public partial class BookComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _Date;
		
		private string _Comment;
		
		private System.Nullable<System.Guid> _UserID;
		
		private int _DescriptionID;
		
		private string _UserName;
		
		private string _UserMail;
		
		private bool _Approved;
		
		private System.Nullable<int> _ImportID;
		
		private EntityRef<User> _User;
		
		private EntityRef<BookDescriptionCatalog> _BookDescriptionCatalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnUserIDChanged();
    partial void OnDescriptionIDChanging(int value);
    partial void OnDescriptionIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserMailChanging(string value);
    partial void OnUserMailChanged();
    partial void OnApprovedChanging(bool value);
    partial void OnApprovedChanged();
    partial void OnImportIDChanging(System.Nullable<int> value);
    partial void OnImportIDChanged();
    #endregion
		
		public BookComment()
		{
			this._User = default(EntityRef<User>);
			this._BookDescriptionCatalog = default(EntityRef<BookDescriptionCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionID", DbType="Int NOT NULL")]
		public int DescriptionID
		{
			get
			{
				return this._DescriptionID;
			}
			set
			{
				if ((this._DescriptionID != value))
				{
					if (this._BookDescriptionCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDescriptionIDChanging(value);
					this.SendPropertyChanging();
					this._DescriptionID = value;
					this.SendPropertyChanged("DescriptionID");
					this.OnDescriptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMail", DbType="NVarChar(400)")]
		public string UserMail
		{
			get
			{
				return this._UserMail;
			}
			set
			{
				if ((this._UserMail != value))
				{
					this.OnUserMailChanging(value);
					this.SendPropertyChanging();
					this._UserMail = value;
					this.SendPropertyChanged("UserMail");
					this.OnUserMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit NOT NULL")]
		public bool Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportID", DbType="Int")]
		public System.Nullable<int> ImportID
		{
			get
			{
				return this._ImportID;
			}
			set
			{
				if ((this._ImportID != value))
				{
					this.OnImportIDChanging(value);
					this.SendPropertyChanging();
					this._ImportID = value;
					this.SendPropertyChanged("ImportID");
					this.OnImportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BookComment", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteRule="SET NULL")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BookComments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BookComments.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookDescriptionCatalog_BookComment", Storage="_BookDescriptionCatalog", ThisKey="DescriptionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookDescriptionCatalog BookDescriptionCatalog
		{
			get
			{
				return this._BookDescriptionCatalog.Entity;
			}
			set
			{
				BookDescriptionCatalog previousValue = this._BookDescriptionCatalog.Entity;
				if (((previousValue != value) 
							|| (this._BookDescriptionCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookDescriptionCatalog.Entity = null;
						previousValue.BookComments.Remove(this);
					}
					this._BookDescriptionCatalog.Entity = value;
					if ((value != null))
					{
						value.BookComments.Add(this);
						this._DescriptionID = value.ID;
					}
					else
					{
						this._DescriptionID = default(int);
					}
					this.SendPropertyChanged("BookDescriptionCatalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MailingReplacements")]
	public partial class MailingReplacement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Replacement;
		
		private string _Description;
		
		private int _MailingID;
		
		private EntityRef<MailingList> _MailingList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnReplacementChanging(string value);
    partial void OnReplacementChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMailingIDChanging(int value);
    partial void OnMailingIDChanged();
    #endregion
		
		public MailingReplacement()
		{
			this._MailingList = default(EntityRef<MailingList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Replacement", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Replacement
		{
			get
			{
				return this._Replacement;
			}
			set
			{
				if ((this._Replacement != value))
				{
					this.OnReplacementChanging(value);
					this.SendPropertyChanging();
					this._Replacement = value;
					this.SendPropertyChanged("Replacement");
					this.OnReplacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailingID", DbType="Int NOT NULL")]
		public int MailingID
		{
			get
			{
				return this._MailingID;
			}
			set
			{
				if ((this._MailingID != value))
				{
					if (this._MailingList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMailingIDChanging(value);
					this.SendPropertyChanging();
					this._MailingID = value;
					this.SendPropertyChanged("MailingID");
					this.OnMailingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MailingList_MailingReplacement", Storage="_MailingList", ThisKey="MailingID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MailingList MailingList
		{
			get
			{
				return this._MailingList.Entity;
			}
			set
			{
				MailingList previousValue = this._MailingList.Entity;
				if (((previousValue != value) 
							|| (this._MailingList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MailingList.Entity = null;
						previousValue.MailingReplacements.Remove(this);
					}
					this._MailingList.Entity = value;
					if ((value != null))
					{
						value.MailingReplacements.Add(this);
						this._MailingID = value.ID;
					}
					else
					{
						this._MailingID = default(int);
					}
					this.SendPropertyChanged("MailingList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MailingList")]
	public partial class MailingList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Header;
		
		private string _Letter;
		
		private string _LetterKey;
		
		private string _Name;
		
		private bool _IsForAdmin;
		
		private string _TargetMail;
		
		private EntitySet<MailingReplacement> _MailingReplacements;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHeaderChanging(string value);
    partial void OnHeaderChanged();
    partial void OnLetterChanging(string value);
    partial void OnLetterChanged();
    partial void OnLetterKeyChanging(string value);
    partial void OnLetterKeyChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsForAdminChanging(bool value);
    partial void OnIsForAdminChanged();
    partial void OnTargetMailChanging(string value);
    partial void OnTargetMailChanged();
    #endregion
		
		public MailingList()
		{
			this._MailingReplacements = new EntitySet<MailingReplacement>(new Action<MailingReplacement>(this.attach_MailingReplacements), new Action<MailingReplacement>(this.detach_MailingReplacements));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this.OnHeaderChanging(value);
					this.SendPropertyChanging();
					this._Header = value;
					this.SendPropertyChanged("Header");
					this.OnHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Letter", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Letter
		{
			get
			{
				return this._Letter;
			}
			set
			{
				if ((this._Letter != value))
				{
					this.OnLetterChanging(value);
					this.SendPropertyChanging();
					this._Letter = value;
					this.SendPropertyChanged("Letter");
					this.OnLetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LetterKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LetterKey
		{
			get
			{
				return this._LetterKey;
			}
			set
			{
				if ((this._LetterKey != value))
				{
					this.OnLetterKeyChanging(value);
					this.SendPropertyChanging();
					this._LetterKey = value;
					this.SendPropertyChanged("LetterKey");
					this.OnLetterKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForAdmin", DbType="Bit NOT NULL")]
		public bool IsForAdmin
		{
			get
			{
				return this._IsForAdmin;
			}
			set
			{
				if ((this._IsForAdmin != value))
				{
					this.OnIsForAdminChanging(value);
					this.SendPropertyChanging();
					this._IsForAdmin = value;
					this.SendPropertyChanged("IsForAdmin");
					this.OnIsForAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetMail", DbType="NVarChar(1000)")]
		public string TargetMail
		{
			get
			{
				return this._TargetMail;
			}
			set
			{
				if ((this._TargetMail != value))
				{
					this.OnTargetMailChanging(value);
					this.SendPropertyChanging();
					this._TargetMail = value;
					this.SendPropertyChanged("TargetMail");
					this.OnTargetMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MailingList_MailingReplacement", Storage="_MailingReplacements", ThisKey="ID", OtherKey="MailingID")]
		public EntitySet<MailingReplacement> MailingReplacements
		{
			get
			{
				return this._MailingReplacements;
			}
			set
			{
				this._MailingReplacements.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MailingReplacements(MailingReplacement entity)
		{
			this.SendPropertyChanging();
			entity.MailingList = this;
		}
		
		private void detach_MailingReplacements(MailingReplacement entity)
		{
			this.SendPropertyChanging();
			entity.MailingList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDeliveryProviders")]
	public partial class OrderDeliveryProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _UID;
		
		private int _OrderNum;
		
		private int _GroupID;
		
		private bool _ShowAdress;
		
		private bool _ShowTime;
		
		private bool _ShowTown;
		
		private bool _ShowRegions;
		
		private bool _ShowOrgData;
		
		private string _ListType;
		
		private string _DefaultCity;
		
		private bool _ShowIndex;
		
		private int _SprinterID;
		
		private System.Nullable<decimal> _DiscountThreshold;
		
		private EntitySet<OrderDeliveryRegion> _OrderDeliveryRegions;
		
		private EntitySet<OrderPaymentDeliveryRel> _OrderPaymentDeliveryRels;
		
		private EntityRef<OrderDeliveryGroup> _OrderDeliveryGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnShowAdressChanging(bool value);
    partial void OnShowAdressChanged();
    partial void OnShowTimeChanging(bool value);
    partial void OnShowTimeChanged();
    partial void OnShowTownChanging(bool value);
    partial void OnShowTownChanged();
    partial void OnShowRegionsChanging(bool value);
    partial void OnShowRegionsChanged();
    partial void OnShowOrgDataChanging(bool value);
    partial void OnShowOrgDataChanged();
    partial void OnListTypeChanging(string value);
    partial void OnListTypeChanged();
    partial void OnDefaultCityChanging(string value);
    partial void OnDefaultCityChanged();
    partial void OnShowIndexChanging(bool value);
    partial void OnShowIndexChanged();
    partial void OnSprinterIDChanging(int value);
    partial void OnSprinterIDChanged();
    partial void OnDiscountThresholdChanging(System.Nullable<decimal> value);
    partial void OnDiscountThresholdChanged();
    #endregion
		
		public OrderDeliveryProvider()
		{
			this._OrderDeliveryRegions = new EntitySet<OrderDeliveryRegion>(new Action<OrderDeliveryRegion>(this.attach_OrderDeliveryRegions), new Action<OrderDeliveryRegion>(this.detach_OrderDeliveryRegions));
			this._OrderPaymentDeliveryRels = new EntitySet<OrderPaymentDeliveryRel>(new Action<OrderPaymentDeliveryRel>(this.attach_OrderPaymentDeliveryRels), new Action<OrderPaymentDeliveryRel>(this.detach_OrderPaymentDeliveryRels));
			this._OrderDeliveryGroup = default(EntityRef<OrderDeliveryGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._OrderDeliveryGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowAdress", DbType="Bit NOT NULL")]
		public bool ShowAdress
		{
			get
			{
				return this._ShowAdress;
			}
			set
			{
				if ((this._ShowAdress != value))
				{
					this.OnShowAdressChanging(value);
					this.SendPropertyChanging();
					this._ShowAdress = value;
					this.SendPropertyChanged("ShowAdress");
					this.OnShowAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowTime", DbType="Bit NOT NULL")]
		public bool ShowTime
		{
			get
			{
				return this._ShowTime;
			}
			set
			{
				if ((this._ShowTime != value))
				{
					this.OnShowTimeChanging(value);
					this.SendPropertyChanging();
					this._ShowTime = value;
					this.SendPropertyChanged("ShowTime");
					this.OnShowTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowTown", DbType="Bit NOT NULL")]
		public bool ShowTown
		{
			get
			{
				return this._ShowTown;
			}
			set
			{
				if ((this._ShowTown != value))
				{
					this.OnShowTownChanging(value);
					this.SendPropertyChanging();
					this._ShowTown = value;
					this.SendPropertyChanged("ShowTown");
					this.OnShowTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowRegions", DbType="Bit NOT NULL")]
		public bool ShowRegions
		{
			get
			{
				return this._ShowRegions;
			}
			set
			{
				if ((this._ShowRegions != value))
				{
					this.OnShowRegionsChanging(value);
					this.SendPropertyChanging();
					this._ShowRegions = value;
					this.SendPropertyChanged("ShowRegions");
					this.OnShowRegionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowOrgData", DbType="Bit NOT NULL")]
		public bool ShowOrgData
		{
			get
			{
				return this._ShowOrgData;
			}
			set
			{
				if ((this._ShowOrgData != value))
				{
					this.OnShowOrgDataChanging(value);
					this.SendPropertyChanging();
					this._ShowOrgData = value;
					this.SendPropertyChanged("ShowOrgData");
					this.OnShowOrgDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListType", DbType="NVarChar(50)")]
		public string ListType
		{
			get
			{
				return this._ListType;
			}
			set
			{
				if ((this._ListType != value))
				{
					this.OnListTypeChanging(value);
					this.SendPropertyChanging();
					this._ListType = value;
					this.SendPropertyChanged("ListType");
					this.OnListTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultCity", DbType="NVarChar(50)")]
		public string DefaultCity
		{
			get
			{
				return this._DefaultCity;
			}
			set
			{
				if ((this._DefaultCity != value))
				{
					this.OnDefaultCityChanging(value);
					this.SendPropertyChanging();
					this._DefaultCity = value;
					this.SendPropertyChanged("DefaultCity");
					this.OnDefaultCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowIndex", DbType="Bit NOT NULL")]
		public bool ShowIndex
		{
			get
			{
				return this._ShowIndex;
			}
			set
			{
				if ((this._ShowIndex != value))
				{
					this.OnShowIndexChanging(value);
					this.SendPropertyChanging();
					this._ShowIndex = value;
					this.SendPropertyChanged("ShowIndex");
					this.OnShowIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SprinterID", DbType="Int NOT NULL")]
		public int SprinterID
		{
			get
			{
				return this._SprinterID;
			}
			set
			{
				if ((this._SprinterID != value))
				{
					this.OnSprinterIDChanging(value);
					this.SendPropertyChanging();
					this._SprinterID = value;
					this.SendPropertyChanged("SprinterID");
					this.OnSprinterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountThreshold", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DiscountThreshold
		{
			get
			{
				return this._DiscountThreshold;
			}
			set
			{
				if ((this._DiscountThreshold != value))
				{
					this.OnDiscountThresholdChanging(value);
					this.SendPropertyChanging();
					this._DiscountThreshold = value;
					this.SendPropertyChanged("DiscountThreshold");
					this.OnDiscountThresholdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryProvider_OrderDeliveryRegion", Storage="_OrderDeliveryRegions", ThisKey="ID", OtherKey="DeliveryProviderID")]
		public EntitySet<OrderDeliveryRegion> OrderDeliveryRegions
		{
			get
			{
				return this._OrderDeliveryRegions;
			}
			set
			{
				this._OrderDeliveryRegions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryProvider_OrderPaymentDeliveryRel", Storage="_OrderPaymentDeliveryRels", ThisKey="ID", OtherKey="DeliveryProviderID")]
		public EntitySet<OrderPaymentDeliveryRel> OrderPaymentDeliveryRels
		{
			get
			{
				return this._OrderPaymentDeliveryRels;
			}
			set
			{
				this._OrderPaymentDeliveryRels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryGroup_OrderDeliveryProvider", Storage="_OrderDeliveryGroup", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OrderDeliveryGroup OrderDeliveryGroup
		{
			get
			{
				return this._OrderDeliveryGroup.Entity;
			}
			set
			{
				OrderDeliveryGroup previousValue = this._OrderDeliveryGroup.Entity;
				if (((previousValue != value) 
							|| (this._OrderDeliveryGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDeliveryGroup.Entity = null;
						previousValue.OrderDeliveryProviders.Remove(this);
					}
					this._OrderDeliveryGroup.Entity = value;
					if ((value != null))
					{
						value.OrderDeliveryProviders.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("OrderDeliveryGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDeliveryRegions(OrderDeliveryRegion entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryProvider = this;
		}
		
		private void detach_OrderDeliveryRegions(OrderDeliveryRegion entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryProvider = null;
		}
		
		private void attach_OrderPaymentDeliveryRels(OrderPaymentDeliveryRel entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryProvider = this;
		}
		
		private void detach_OrderPaymentDeliveryRels(OrderPaymentDeliveryRel entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryProvider = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookSpecOffers")]
	public partial class BookSpecOffer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SaleCatalogID;
		
		private decimal _SpecPrice;
		
		private decimal _MinPrice;
		
		private EntityRef<BookSaleCatalog> _BookSaleCatalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSaleCatalogIDChanging(int value);
    partial void OnSaleCatalogIDChanged();
    partial void OnSpecPriceChanging(decimal value);
    partial void OnSpecPriceChanged();
    partial void OnMinPriceChanging(decimal value);
    partial void OnMinPriceChanged();
    #endregion
		
		public BookSpecOffer()
		{
			this._BookSaleCatalog = default(EntityRef<BookSaleCatalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleCatalogID", DbType="Int NOT NULL")]
		public int SaleCatalogID
		{
			get
			{
				return this._SaleCatalogID;
			}
			set
			{
				if ((this._SaleCatalogID != value))
				{
					if (this._BookSaleCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSaleCatalogIDChanging(value);
					this.SendPropertyChanging();
					this._SaleCatalogID = value;
					this.SendPropertyChanged("SaleCatalogID");
					this.OnSaleCatalogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal SpecPrice
		{
			get
			{
				return this._SpecPrice;
			}
			set
			{
				if ((this._SpecPrice != value))
				{
					this.OnSpecPriceChanging(value);
					this.SendPropertyChanging();
					this._SpecPrice = value;
					this.SendPropertyChanged("SpecPrice");
					this.OnSpecPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal MinPrice
		{
			get
			{
				return this._MinPrice;
			}
			set
			{
				if ((this._MinPrice != value))
				{
					this.OnMinPriceChanging(value);
					this.SendPropertyChanging();
					this._MinPrice = value;
					this.SendPropertyChanged("MinPrice");
					this.OnMinPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookSaleCatalog_BookSpecOffer", Storage="_BookSaleCatalog", ThisKey="SaleCatalogID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookSaleCatalog BookSaleCatalog
		{
			get
			{
				return this._BookSaleCatalog.Entity;
			}
			set
			{
				BookSaleCatalog previousValue = this._BookSaleCatalog.Entity;
				if (((previousValue != value) 
							|| (this._BookSaleCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookSaleCatalog.Entity = null;
						previousValue.BookSpecOffers.Remove(this);
					}
					this._BookSaleCatalog.Entity = value;
					if ((value != null))
					{
						value.BookSpecOffers.Add(this);
						this._SaleCatalogID = value.ID;
					}
					else
					{
						this._SaleCatalogID = default(int);
					}
					this.SendPropertyChanged("BookSaleCatalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopCartItems")]
	public partial class ShopCartItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SaleCatalogID;
		
		private int _Count;
		
		private bool _IsDelayed;
		
		private int _ShopCartID;
		
		private bool _IsSpec;
		
		private EntityRef<BookSaleCatalog> _BookSaleCatalog;
		
		private EntityRef<ShopCart> _ShopCart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSaleCatalogIDChanging(int value);
    partial void OnSaleCatalogIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnIsDelayedChanging(bool value);
    partial void OnIsDelayedChanged();
    partial void OnShopCartIDChanging(int value);
    partial void OnShopCartIDChanged();
    partial void OnIsSpecChanging(bool value);
    partial void OnIsSpecChanged();
    #endregion
		
		public ShopCartItem()
		{
			this._BookSaleCatalog = default(EntityRef<BookSaleCatalog>);
			this._ShopCart = default(EntityRef<ShopCart>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleCatalogID", DbType="Int NOT NULL")]
		public int SaleCatalogID
		{
			get
			{
				return this._SaleCatalogID;
			}
			set
			{
				if ((this._SaleCatalogID != value))
				{
					if (this._BookSaleCatalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSaleCatalogIDChanging(value);
					this.SendPropertyChanging();
					this._SaleCatalogID = value;
					this.SendPropertyChanged("SaleCatalogID");
					this.OnSaleCatalogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelayed", DbType="Bit NOT NULL")]
		public bool IsDelayed
		{
			get
			{
				return this._IsDelayed;
			}
			set
			{
				if ((this._IsDelayed != value))
				{
					this.OnIsDelayedChanging(value);
					this.SendPropertyChanging();
					this._IsDelayed = value;
					this.SendPropertyChanged("IsDelayed");
					this.OnIsDelayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopCartID", DbType="Int NOT NULL")]
		public int ShopCartID
		{
			get
			{
				return this._ShopCartID;
			}
			set
			{
				if ((this._ShopCartID != value))
				{
					if (this._ShopCart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopCartIDChanging(value);
					this.SendPropertyChanging();
					this._ShopCartID = value;
					this.SendPropertyChanged("ShopCartID");
					this.OnShopCartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpec", DbType="Bit NOT NULL")]
		public bool IsSpec
		{
			get
			{
				return this._IsSpec;
			}
			set
			{
				if ((this._IsSpec != value))
				{
					this.OnIsSpecChanging(value);
					this.SendPropertyChanging();
					this._IsSpec = value;
					this.SendPropertyChanged("IsSpec");
					this.OnIsSpecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookSaleCatalog_ShopCartItem", Storage="_BookSaleCatalog", ThisKey="SaleCatalogID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookSaleCatalog BookSaleCatalog
		{
			get
			{
				return this._BookSaleCatalog.Entity;
			}
			set
			{
				BookSaleCatalog previousValue = this._BookSaleCatalog.Entity;
				if (((previousValue != value) 
							|| (this._BookSaleCatalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookSaleCatalog.Entity = null;
						previousValue.ShopCartItems.Remove(this);
					}
					this._BookSaleCatalog.Entity = value;
					if ((value != null))
					{
						value.ShopCartItems.Add(this);
						this._SaleCatalogID = value.ID;
					}
					else
					{
						this._SaleCatalogID = default(int);
					}
					this.SendPropertyChanged("BookSaleCatalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCart_ShopCartItem", Storage="_ShopCart", ThisKey="ShopCartID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ShopCart ShopCart
		{
			get
			{
				return this._ShopCart.Entity;
			}
			set
			{
				ShopCart previousValue = this._ShopCart.Entity;
				if (((previousValue != value) 
							|| (this._ShopCart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopCart.Entity = null;
						previousValue.ShopCartItems.Remove(this);
					}
					this._ShopCart.Entity = value;
					if ((value != null))
					{
						value.ShopCartItems.Add(this);
						this._ShopCartID = value.ID;
					}
					else
					{
						this._ShopCartID = default(int);
					}
					this.SendPropertyChanged("ShopCart");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfiles")]
	public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserID;
		
		private string _Name;
		
		private string _Surname;
		
		private string _Patrinomic;
		
		private System.Nullable<int> _FromIP;
		
		private System.Nullable<System.DateTime> _RegDate;
		
		private string _HomePhone;
		
		private string _MobilePhone;
		
		private string _Region;
		
		private string _Address;
		
		private string _Floor;
		
		private string _Metro;
		
		private string _ImportUID;
		
		private string _SecImportUID;
		
		private string _Town;
		
		private string _Street;
		
		private string _House;
		
		private string _Building;
		
		private string _Doorway;
		
		private string _Flat;
		
		private string _ZipCode;
		
		private string _OrgName;
		
		private string _OrgINN;
		
		private string _OrgKPP;
		
		private string _OrgKS;
		
		private string _OrgRS;
		
		private string _OrgBank;
		
		private string _OrgBik;
		
		private string _OrgJurAddr;
		
		private string _OrgFactAddr;
		
		private string _OrgDirector;
		
		private string _OrgAccountant;
		
		private string _NotifyMail;
		
		private System.Nullable<bool> _NeedMailNotify;
		
		private string _NotifyPhone;
		
		private System.Nullable<bool> _NeedPhoneNotify;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnPatrinomicChanging(string value);
    partial void OnPatrinomicChanged();
    partial void OnFromIPChanging(System.Nullable<int> value);
    partial void OnFromIPChanged();
    partial void OnRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegDateChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnFloorChanging(string value);
    partial void OnFloorChanged();
    partial void OnMetroChanging(string value);
    partial void OnMetroChanged();
    partial void OnImportUIDChanging(string value);
    partial void OnImportUIDChanged();
    partial void OnSecImportUIDChanging(string value);
    partial void OnSecImportUIDChanged();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnHouseChanging(string value);
    partial void OnHouseChanged();
    partial void OnBuildingChanging(string value);
    partial void OnBuildingChanged();
    partial void OnDoorwayChanging(string value);
    partial void OnDoorwayChanged();
    partial void OnFlatChanging(string value);
    partial void OnFlatChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnOrgNameChanging(string value);
    partial void OnOrgNameChanged();
    partial void OnOrgINNChanging(string value);
    partial void OnOrgINNChanged();
    partial void OnOrgKPPChanging(string value);
    partial void OnOrgKPPChanged();
    partial void OnOrgKSChanging(string value);
    partial void OnOrgKSChanged();
    partial void OnOrgRSChanging(string value);
    partial void OnOrgRSChanged();
    partial void OnOrgBankChanging(string value);
    partial void OnOrgBankChanged();
    partial void OnOrgBikChanging(string value);
    partial void OnOrgBikChanged();
    partial void OnOrgJurAddrChanging(string value);
    partial void OnOrgJurAddrChanged();
    partial void OnOrgFactAddrChanging(string value);
    partial void OnOrgFactAddrChanged();
    partial void OnOrgDirectorChanging(string value);
    partial void OnOrgDirectorChanged();
    partial void OnOrgAccountantChanging(string value);
    partial void OnOrgAccountantChanged();
    partial void OnNotifyMailChanging(string value);
    partial void OnNotifyMailChanged();
    partial void OnNeedMailNotifyChanging(System.Nullable<bool> value);
    partial void OnNeedMailNotifyChanged();
    partial void OnNotifyPhoneChanging(string value);
    partial void OnNotifyPhoneChanged();
    partial void OnNeedPhoneNotifyChanging(System.Nullable<bool> value);
    partial void OnNeedPhoneNotifyChanged();
    #endregion
		
		public UserProfile()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(100)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patrinomic", DbType="NVarChar(100)")]
		public string Patrinomic
		{
			get
			{
				return this._Patrinomic;
			}
			set
			{
				if ((this._Patrinomic != value))
				{
					this.OnPatrinomicChanging(value);
					this.SendPropertyChanging();
					this._Patrinomic = value;
					this.SendPropertyChanged("Patrinomic");
					this.OnPatrinomicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromIP", DbType="Int")]
		public System.Nullable<int> FromIP
		{
			get
			{
				return this._FromIP;
			}
			set
			{
				if ((this._FromIP != value))
				{
					this.OnFromIPChanging(value);
					this.SendPropertyChanging();
					this._FromIP = value;
					this.SendPropertyChanged("FromIP");
					this.OnFromIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegDate
		{
			get
			{
				return this._RegDate;
			}
			set
			{
				if ((this._RegDate != value))
				{
					this.OnRegDateChanging(value);
					this.SendPropertyChanging();
					this._RegDate = value;
					this.SendPropertyChanged("RegDate");
					this.OnRegDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(150)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVarChar(150)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(200)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(1000)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Floor", DbType="NVarChar(200)")]
		public string Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this.OnFloorChanging(value);
					this.SendPropertyChanging();
					this._Floor = value;
					this.SendPropertyChanged("Floor");
					this.OnFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metro", DbType="NVarChar(200)")]
		public string Metro
		{
			get
			{
				return this._Metro;
			}
			set
			{
				if ((this._Metro != value))
				{
					this.OnMetroChanging(value);
					this.SendPropertyChanging();
					this._Metro = value;
					this.SendPropertyChanged("Metro");
					this.OnMetroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportUID", DbType="NVarChar(50)")]
		public string ImportUID
		{
			get
			{
				return this._ImportUID;
			}
			set
			{
				if ((this._ImportUID != value))
				{
					this.OnImportUIDChanging(value);
					this.SendPropertyChanging();
					this._ImportUID = value;
					this.SendPropertyChanged("ImportUID");
					this.OnImportUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecImportUID", DbType="NVarChar(50)")]
		public string SecImportUID
		{
			get
			{
				return this._SecImportUID;
			}
			set
			{
				if ((this._SecImportUID != value))
				{
					this.OnSecImportUIDChanging(value);
					this.SendPropertyChanging();
					this._SecImportUID = value;
					this.SendPropertyChanged("SecImportUID");
					this.OnSecImportUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="NVarChar(100)")]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(100)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_House", DbType="NVarChar(20)")]
		public string House
		{
			get
			{
				return this._House;
			}
			set
			{
				if ((this._House != value))
				{
					this.OnHouseChanging(value);
					this.SendPropertyChanging();
					this._House = value;
					this.SendPropertyChanged("House");
					this.OnHouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Building", DbType="NVarChar(20)")]
		public string Building
		{
			get
			{
				return this._Building;
			}
			set
			{
				if ((this._Building != value))
				{
					this.OnBuildingChanging(value);
					this.SendPropertyChanging();
					this._Building = value;
					this.SendPropertyChanged("Building");
					this.OnBuildingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doorway", DbType="NVarChar(20)")]
		public string Doorway
		{
			get
			{
				return this._Doorway;
			}
			set
			{
				if ((this._Doorway != value))
				{
					this.OnDoorwayChanging(value);
					this.SendPropertyChanging();
					this._Doorway = value;
					this.SendPropertyChanged("Doorway");
					this.OnDoorwayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flat", DbType="NVarChar(20)")]
		public string Flat
		{
			get
			{
				return this._Flat;
			}
			set
			{
				if ((this._Flat != value))
				{
					this.OnFlatChanging(value);
					this.SendPropertyChanging();
					this._Flat = value;
					this.SendPropertyChanged("Flat");
					this.OnFlatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(50)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgName", DbType="NVarChar(200)")]
		public string OrgName
		{
			get
			{
				return this._OrgName;
			}
			set
			{
				if ((this._OrgName != value))
				{
					this.OnOrgNameChanging(value);
					this.SendPropertyChanging();
					this._OrgName = value;
					this.SendPropertyChanged("OrgName");
					this.OnOrgNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgINN", DbType="NVarChar(50)")]
		public string OrgINN
		{
			get
			{
				return this._OrgINN;
			}
			set
			{
				if ((this._OrgINN != value))
				{
					this.OnOrgINNChanging(value);
					this.SendPropertyChanging();
					this._OrgINN = value;
					this.SendPropertyChanged("OrgINN");
					this.OnOrgINNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgKPP", DbType="NVarChar(50)")]
		public string OrgKPP
		{
			get
			{
				return this._OrgKPP;
			}
			set
			{
				if ((this._OrgKPP != value))
				{
					this.OnOrgKPPChanging(value);
					this.SendPropertyChanging();
					this._OrgKPP = value;
					this.SendPropertyChanged("OrgKPP");
					this.OnOrgKPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgKS", DbType="NVarChar(50)")]
		public string OrgKS
		{
			get
			{
				return this._OrgKS;
			}
			set
			{
				if ((this._OrgKS != value))
				{
					this.OnOrgKSChanging(value);
					this.SendPropertyChanging();
					this._OrgKS = value;
					this.SendPropertyChanged("OrgKS");
					this.OnOrgKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgRS", DbType="NVarChar(50)")]
		public string OrgRS
		{
			get
			{
				return this._OrgRS;
			}
			set
			{
				if ((this._OrgRS != value))
				{
					this.OnOrgRSChanging(value);
					this.SendPropertyChanging();
					this._OrgRS = value;
					this.SendPropertyChanged("OrgRS");
					this.OnOrgRSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgBank", DbType="NVarChar(50)")]
		public string OrgBank
		{
			get
			{
				return this._OrgBank;
			}
			set
			{
				if ((this._OrgBank != value))
				{
					this.OnOrgBankChanging(value);
					this.SendPropertyChanging();
					this._OrgBank = value;
					this.SendPropertyChanged("OrgBank");
					this.OnOrgBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgBik", DbType="NVarChar(50)")]
		public string OrgBik
		{
			get
			{
				return this._OrgBik;
			}
			set
			{
				if ((this._OrgBik != value))
				{
					this.OnOrgBikChanging(value);
					this.SendPropertyChanging();
					this._OrgBik = value;
					this.SendPropertyChanged("OrgBik");
					this.OnOrgBikChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgJurAddr", DbType="NVarChar(300)")]
		public string OrgJurAddr
		{
			get
			{
				return this._OrgJurAddr;
			}
			set
			{
				if ((this._OrgJurAddr != value))
				{
					this.OnOrgJurAddrChanging(value);
					this.SendPropertyChanging();
					this._OrgJurAddr = value;
					this.SendPropertyChanged("OrgJurAddr");
					this.OnOrgJurAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgFactAddr", DbType="NVarChar(300)")]
		public string OrgFactAddr
		{
			get
			{
				return this._OrgFactAddr;
			}
			set
			{
				if ((this._OrgFactAddr != value))
				{
					this.OnOrgFactAddrChanging(value);
					this.SendPropertyChanging();
					this._OrgFactAddr = value;
					this.SendPropertyChanged("OrgFactAddr");
					this.OnOrgFactAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgDirector", DbType="NVarChar(300)")]
		public string OrgDirector
		{
			get
			{
				return this._OrgDirector;
			}
			set
			{
				if ((this._OrgDirector != value))
				{
					this.OnOrgDirectorChanging(value);
					this.SendPropertyChanging();
					this._OrgDirector = value;
					this.SendPropertyChanged("OrgDirector");
					this.OnOrgDirectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgAccountant", DbType="NVarChar(300)")]
		public string OrgAccountant
		{
			get
			{
				return this._OrgAccountant;
			}
			set
			{
				if ((this._OrgAccountant != value))
				{
					this.OnOrgAccountantChanging(value);
					this.SendPropertyChanging();
					this._OrgAccountant = value;
					this.SendPropertyChanged("OrgAccountant");
					this.OnOrgAccountantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyMail", DbType="NVarChar(400)")]
		public string NotifyMail
		{
			get
			{
				return this._NotifyMail;
			}
			set
			{
				if ((this._NotifyMail != value))
				{
					this.OnNotifyMailChanging(value);
					this.SendPropertyChanging();
					this._NotifyMail = value;
					this.SendPropertyChanged("NotifyMail");
					this.OnNotifyMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedMailNotify", DbType="Bit")]
		public System.Nullable<bool> NeedMailNotify
		{
			get
			{
				return this._NeedMailNotify;
			}
			set
			{
				if ((this._NeedMailNotify != value))
				{
					this.OnNeedMailNotifyChanging(value);
					this.SendPropertyChanging();
					this._NeedMailNotify = value;
					this.SendPropertyChanged("NeedMailNotify");
					this.OnNeedMailNotifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyPhone", DbType="NVarChar(150)")]
		public string NotifyPhone
		{
			get
			{
				return this._NotifyPhone;
			}
			set
			{
				if ((this._NotifyPhone != value))
				{
					this.OnNotifyPhoneChanging(value);
					this.SendPropertyChanging();
					this._NotifyPhone = value;
					this.SendPropertyChanged("NotifyPhone");
					this.OnNotifyPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedPhoneNotify", DbType="Bit")]
		public System.Nullable<bool> NeedPhoneNotify
		{
			get
			{
				return this._NeedPhoneNotify;
			}
			set
			{
				if ((this._NeedPhoneNotify != value))
				{
					this.OnNeedPhoneNotifyChanging(value);
					this.SendPropertyChanging();
					this._NeedPhoneNotify = value;
					this.SendPropertyChanged("NeedPhoneNotify");
					this.OnNeedPhoneNotifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserProfile", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserProfile = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserProfile = this;
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderComments")]
	public partial class OrderComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _Date;
		
		private string _Comment;
		
		private int _OrderID;
		
		private string _Author;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    #endregion
		
		public OrderComment()
		{
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(500)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderComment", Storage="_Order", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderComments.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderComments.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class getSimilarBooksResult
	{
		
		private System.Nullable<int> _ID;
		
		private System.Nullable<int> _Rating;
		
		public getSimilarBooksResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int")]
		public System.Nullable<int> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this._Rating = value;
				}
			}
		}
	}
	
	public partial class getSectionListResult
	{
		
		private System.Nullable<int> _ID;
		
		private string _URL;
		
		private System.Nullable<int> _ParentID;
		
		private System.Nullable<int> _BookTotalCount;
		
		private string _FullURL;
		
		private System.Nullable<int> _SectionCount;
		
		public getSectionListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(400)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this._URL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookTotalCount", DbType="Int")]
		public System.Nullable<int> BookTotalCount
		{
			get
			{
				return this._BookTotalCount;
			}
			set
			{
				if ((this._BookTotalCount != value))
				{
					this._BookTotalCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullURL", DbType="NVarChar(MAX)")]
		public string FullURL
		{
			get
			{
				return this._FullURL;
			}
			set
			{
				if ((this._FullURL != value))
				{
					this._FullURL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionCount", DbType="Int")]
		public System.Nullable<int> SectionCount
		{
			get
			{
				return this._SectionCount;
			}
			set
			{
				if ((this._SectionCount != value))
				{
					this._SectionCount = value;
				}
			}
		}
	}
	
	public partial class getIntListByJoinedStringResult
	{
		
		private System.Nullable<int> _ID;
		
		public getIntListByJoinedStringResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}
	
	public partial class getBooksByAnnotationResult
	{
		
		private System.Nullable<int> _ID;
		
		private System.Nullable<int> _Rank;
		
		public getBooksByAnnotationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="Int")]
		public System.Nullable<int> Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
	}
	
	public partial class getPageListResult
	{
		
		private System.Nullable<int> _ID;
		
		private string _PageName;
		
		private string _URL;
		
		private string _FullName;
		
		private System.Nullable<int> _ParentID;
		
		private System.Nullable<bool> _Visible;
		
		private System.Nullable<bool> _ViewMenu;
		
		private System.Nullable<int> _TreeLevel;
		
		private System.Nullable<int> _Type;
		
		private string _FullURL;
		
		private System.Nullable<int> _OrderNum;
		
		private string _BreadCrumbs;
		
		private string _LinkedBreadCrumbs;
		
		private System.Nullable<int> _ActiveCount;
		
		private System.Nullable<int> _AllCount;
		
		private string _OriginalURL;
		
		public getPageListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(400)")]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this._PageName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(400)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this._URL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(1024)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit")]
		public System.Nullable<bool> Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this._Visible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewMenu", DbType="Bit")]
		public System.Nullable<bool> ViewMenu
		{
			get
			{
				return this._ViewMenu;
			}
			set
			{
				if ((this._ViewMenu != value))
				{
					this._ViewMenu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreeLevel", DbType="Int")]
		public System.Nullable<int> TreeLevel
		{
			get
			{
				return this._TreeLevel;
			}
			set
			{
				if ((this._TreeLevel != value))
				{
					this._TreeLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullURL", DbType="NVarChar(MAX)")]
		public string FullURL
		{
			get
			{
				return this._FullURL;
			}
			set
			{
				if ((this._FullURL != value))
				{
					this._FullURL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int")]
		public System.Nullable<int> OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this._OrderNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreadCrumbs", DbType="NVarChar(MAX)")]
		public string BreadCrumbs
		{
			get
			{
				return this._BreadCrumbs;
			}
			set
			{
				if ((this._BreadCrumbs != value))
				{
					this._BreadCrumbs = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedBreadCrumbs", DbType="NVarChar(MAX)")]
		public string LinkedBreadCrumbs
		{
			get
			{
				return this._LinkedBreadCrumbs;
			}
			set
			{
				if ((this._LinkedBreadCrumbs != value))
				{
					this._LinkedBreadCrumbs = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveCount", DbType="Int")]
		public System.Nullable<int> ActiveCount
		{
			get
			{
				return this._ActiveCount;
			}
			set
			{
				if ((this._ActiveCount != value))
				{
					this._ActiveCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllCount", DbType="Int")]
		public System.Nullable<int> AllCount
		{
			get
			{
				return this._AllCount;
			}
			set
			{
				if ((this._AllCount != value))
				{
					this._AllCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalURL", DbType="NVarChar(400)")]
		public string OriginalURL
		{
			get
			{
				return this._OriginalURL;
			}
			set
			{
				if ((this._OriginalURL != value))
				{
					this._OriginalURL = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
